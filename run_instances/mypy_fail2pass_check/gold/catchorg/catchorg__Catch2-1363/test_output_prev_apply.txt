+ cd /testbed
+ git checkout c9de7dd12d2971c63f9d32ce5459eb98f2fec13d projects/SelfTest/UsageTests/BDD.tests.cpp
+ git apply -v -
Checking patch projects/SelfTest/UsageTests/BDD.tests.cpp...
Applied patch projects/SelfTest/UsageTests/BDD.tests.cpp cleanly.
+ cd build
+ ./projects/SelfTest '[BDD]' --success

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SelfTest is a Catch v2.3.0 host application.
Run with -? for options

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:52
...............................................................................

/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:54: 
PASSED:
  REQUIRE( v.size() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
      When: it is made larger
      Then: the size and capacity go up
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:58
...............................................................................

/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:59: 
PASSED:
  REQUIRE( v.size() == 10 )
with expansion:
  10 == 10

/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:60: 
PASSED:
  REQUIRE( v.capacity() >= 10 )
with expansion:
  10 >= 10

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
      When: it is made larger
      Then: the size and capacity go up
  And when: it is made smaller again
      Then: the size goes down but the capacity stays the same
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:64
...............................................................................

/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:65: 
PASSED:
  REQUIRE( v.size() == 5 )
with expansion:
  5 == 5

/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:66: 
PASSED:
  REQUIRE( v.capacity() >= 10 )
with expansion:
  10 >= 10

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:52
...............................................................................

/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:54: 
PASSED:
  REQUIRE( v.size() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
Scenario: Vector resizing affects size and capacity
     Given: an empty vector
      When: we reserve more space
      Then: The capacity is increased but the size remains the same
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:74
...............................................................................

/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:75: 
PASSED:
  REQUIRE( v.capacity() >= 10 )
with expansion:
  10 >= 10

/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:76: 
PASSED:
  REQUIRE( v.size() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
Scenario: BDD tests requiring Fixtures to provide commonly-accessed data or
          methods
     Given: No operations precede me
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:96
...............................................................................

/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:97: 
PASSED:
  REQUIRE( before == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
Scenario: BDD tests requiring Fixtures to provide commonly-accessed data or
          methods
     Given: No operations precede me
      When: We get the count
      Then: Subsequently values are higher
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:100
...............................................................................

/testbed/projects/SelfTest/UsageTests/BDD.tests.cpp:101: 
PASSED:
  REQUIRE( after > before )
with expansion:
  1 > 0

===============================================================================
All tests passed (10 assertions in 2 test cases)

OMNIGRIL_EXIT_CODE=0
+ rc=0
+ echo OMNIGRIL_EXIT_CODE=0
+ cd /testbed
+ git checkout c9de7dd12d2971c63f9d32ce5459eb98f2fec13d projects/SelfTest/UsageTests/BDD.tests.cpp
