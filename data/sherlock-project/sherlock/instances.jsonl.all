{"repo": "sherlock-project/sherlock", "pull_number": 2356, "instance_id": "sherlock-project__sherlock-2356", "issue_numbers": ["2354"], "base_commit": "e94e00af5307800b92d1b82cf6c5223a654b6e34", "patch": "diff --git a/sherlock_project/sherlock.py b/sherlock_project/sherlock.py\n--- a/sherlock_project/sherlock.py\n+++ b/sherlock_project/sherlock.py\n@@ -784,7 +784,24 @@ def main():\n                 os.path.join(os.path.dirname(__file__), \"resources/data.json\")\n             )\n         else:\n-            sites = SitesInformation(args.json_file)\n+            json_file_location = args.json_file\n+            if args.json_file:\n+                # If --json parameter is a number, interpret it as a pull request number\n+                if args.json_file.isnumeric():\n+                    pull_number = args.json_file\n+                    pull_url = f\"https://api.github.com/repos/sherlock-project/sherlock/pulls/{pull_number}\"\n+                    pull_request_raw = requests.get(pull_url).text\n+                    pull_request_json = json_loads(pull_request_raw)\n+\n+                    # Check if it's a valid pull request\n+                    if \"message\" in pull_request_json:\n+                        print(f\"ERROR: Pull request #{pull_number} not found.\")\n+                        sys.exit(1)\n+\n+                    head_commit_sha = pull_request_json[\"head\"][\"sha\"]\n+                    json_file_location = f\"https://raw.githubusercontent.com/sherlock-project/sherlock/{head_commit_sha}/sherlock_project/resources/data.json\"\n+\n+            sites = SitesInformation(json_file_location)\n     except Exception as error:\n         print(f\"ERROR:  {error}\")\n         sys.exit(1)\n", "test_patch": "", "problem_statement": "Add flag to specify PR for testing manifest changes\n### Description\r\n\r\ni.e. `--pr 123`  \r\nAutomatically fetch the data.json from the passed PR\r\n\r\nFaster patch review times rather than having to manually fetch the uri or clone\r\n\r\nFlag intended for devel purposes only, rather than everyday use (similar to `--dump-response`).\r\n\r\n### Code of Conduct\r\n\r\n- [X] I agree to follow this project's Code of Conduct\n", "hints_text": "", "created_at": "2024-11-04T09:38:11Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 2267, "instance_id": "sherlock-project__sherlock-2267", "issue_numbers": ["2266", "2266"], "base_commit": "47ab466d85d4d3e548bc2feba41648c27b21bd89", "patch": "diff --git a/sherlock_project/__main__.py b/sherlock_project/__main__.py\n--- a/sherlock_project/__main__.py\n+++ b/sherlock_project/__main__.py\n@@ -14,8 +14,8 @@\n     # Check if the user is using the correct version of Python\n     python_version = sys.version.split()[0]\n \n-    if sys.version_info < (3, 8):\n-        print(f\"Sherlock requires Python 3.8+\\nYou are using Python {python_version}, which is not supported by Sherlock.\")\n+    if sys.version_info < (3, 9):\n+        print(f\"Sherlock requires Python 3.9+\\nYou are using Python {python_version}, which is not supported by Sherlock.\")\n         sys.exit(1)\n \n     from sherlock_project import sherlock\n", "test_patch": "diff --git a/tests/sherlock_interactives.py b/tests/sherlock_interactives.py\n--- a/tests/sherlock_interactives.py\n+++ b/tests/sherlock_interactives.py\n@@ -20,8 +20,7 @@ def run_cli(args:str = \"\") -> str:\n             raise InteractivesSubprocessError(e.output.decode())\n \n \n-    # -> list[str] is prefered, but will require deprecation of support for Python 3.8\n-    def walk_sherlock_for_files_with(pattern: str) -> list:\n+    def walk_sherlock_for_files_with(pattern: str) -> list[str]:\n         \"\"\"Check all files within the Sherlock package for matching patterns\"\"\"\n         pattern:re.Pattern = re.compile(pattern)\n         matching_files:list[str] = []\n", "problem_statement": "Deprecate support for Python 3.8\n### Description\r\n\r\nSome versions of pandas and numpy are incompatible, and the compatible versions of pandas is not compatible with Python versions below 3.9. Since Python 3.8 is reaching EOL in about a month anyways, support for this version should now be deprecated to allow for more ready dependency resolution and avoidance of this fatal error.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/[redacted]/.cache/pypoetry/virtualenvs/sherlock-project-VJORHILj-py3.12/bin/sherlock\", line 3, in <module>\r\n    from sherlock_project.sherlock import main\r\n  File \"/home/[redacted]/Documents/sherlock/sherlock_project/sherlock.py\", line 21, in <module>\r\n    import pandas as pd\r\n  File \"/home/[redacted]/.cache/pypoetry/virtualenvs/sherlock-project-VJORHILj-py3.12/lib64/python3.12/site-packages/pandas/__init__.py\", line 22, in <module>\r\n    from pandas.compat import is_numpy_dev as _is_numpy_dev  # pyright: ignore # noqa:F401\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/[redacted]/.cache/pypoetry/virtualenvs/sherlock-project-VJORHILj-py3.12/lib64/python3.12/site-packages/pandas/compat/__init__.py\", line 25, in <module>\r\n    from pandas.compat.numpy import (\r\n  File \"/home/[redacted]/.cache/pypoetry/virtualenvs/sherlock-project-VJORHILj-py3.12/lib64/python3.12/site-packages/pandas/compat/numpy/__init__.py\", line 4, in <module>\r\n    from pandas.util.version import Version\r\n  File \"/home/[redacted]/.cache/pypoetry/virtualenvs/sherlock-project-VJORHILj-py3.12/lib64/python3.12/site-packages/pandas/util/__init__.py\", line 2, in <module>\r\n    from pandas.util._decorators import (  # noqa:F401\r\n  File \"/home/[redacted]/.cache/pypoetry/virtualenvs/sherlock-project-VJORHILj-py3.12/lib64/python3.12/site-packages/pandas/util/_decorators.py\", line 14, in <module>\r\n    from pandas._libs.properties import cache_readonly\r\n  File \"/home/[redacted]/.cache/pypoetry/virtualenvs/sherlock-project-VJORHILj-py3.12/lib64/python3.12/site-packages/pandas/_libs/__init__.py\", line 13, in <module>\r\n    from pandas._libs.interval import Interval\r\n  File \"pandas/_libs/interval.pyx\", line 1, in init pandas._libs.interval\r\nValueError: numpy.dtype size changed, may indicate binary incompatibility. Expected 96 from C header, got 88 from PyObject\r\n```\nDeprecate support for Python 3.8\n### Description\r\n\r\nSome versions of pandas and numpy are incompatible, and the compatible versions of pandas is not compatible with Python versions below 3.9. Since Python 3.8 is reaching EOL in about a month anyways, support for this version should now be deprecated to allow for more ready dependency resolution and avoidance of this fatal error.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/[redacted]/.cache/pypoetry/virtualenvs/sherlock-project-VJORHILj-py3.12/bin/sherlock\", line 3, in <module>\r\n    from sherlock_project.sherlock import main\r\n  File \"/home/[redacted]/Documents/sherlock/sherlock_project/sherlock.py\", line 21, in <module>\r\n    import pandas as pd\r\n  File \"/home/[redacted]/.cache/pypoetry/virtualenvs/sherlock-project-VJORHILj-py3.12/lib64/python3.12/site-packages/pandas/__init__.py\", line 22, in <module>\r\n    from pandas.compat import is_numpy_dev as _is_numpy_dev  # pyright: ignore # noqa:F401\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/[redacted]/.cache/pypoetry/virtualenvs/sherlock-project-VJORHILj-py3.12/lib64/python3.12/site-packages/pandas/compat/__init__.py\", line 25, in <module>\r\n    from pandas.compat.numpy import (\r\n  File \"/home/[redacted]/.cache/pypoetry/virtualenvs/sherlock-project-VJORHILj-py3.12/lib64/python3.12/site-packages/pandas/compat/numpy/__init__.py\", line 4, in <module>\r\n    from pandas.util.version import Version\r\n  File \"/home/[redacted]/.cache/pypoetry/virtualenvs/sherlock-project-VJORHILj-py3.12/lib64/python3.12/site-packages/pandas/util/__init__.py\", line 2, in <module>\r\n    from pandas.util._decorators import (  # noqa:F401\r\n  File \"/home/[redacted]/.cache/pypoetry/virtualenvs/sherlock-project-VJORHILj-py3.12/lib64/python3.12/site-packages/pandas/util/_decorators.py\", line 14, in <module>\r\n    from pandas._libs.properties import cache_readonly\r\n  File \"/home/[redacted]/.cache/pypoetry/virtualenvs/sherlock-project-VJORHILj-py3.12/lib64/python3.12/site-packages/pandas/_libs/__init__.py\", line 13, in <module>\r\n    from pandas._libs.interval import Interval\r\n  File \"pandas/_libs/interval.pyx\", line 1, in init pandas._libs.interval\r\nValueError: numpy.dtype size changed, may indicate binary incompatibility. Expected 96 from C header, got 88 from PyObject\r\n```\n", "hints_text": "\n", "created_at": "2024-08-23T05:10:52Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 2263, "instance_id": "sherlock-project__sherlock-2263", "issue_numbers": ["2249"], "base_commit": "573ae6c4889ddc4f37f4f5ffd4a3ea07bd1f581b", "patch": "diff --git a/sherlock_project/sherlock.py b/sherlock_project/sherlock.py\n--- a/sherlock_project/sherlock.py\n+++ b/sherlock_project/sherlock.py\n@@ -716,6 +716,14 @@ def main():\n         help=\"Include checking of NSFW sites from default list.\",\n     )\n \n+    parser.add_argument(\n+        \"--no-txt\",\n+        action=\"store_true\",\n+        dest=\"no_txt\",\n+        default=False,\n+        help=\"Disable creation of a txt file\",\n+    )\n+\n     args = parser.parse_args()\n \n     # If the user presses CTRL-C, exit gracefully without throwing errors\n@@ -847,14 +855,15 @@ def main():\n         else:\n             result_file = f\"{username}.txt\"\n \n-        with open(result_file, \"w\", encoding=\"utf-8\") as file:\n-            exists_counter = 0\n-            for website_name in results:\n-                dictionary = results[website_name]\n-                if dictionary.get(\"status\").status == QueryStatus.CLAIMED:\n-                    exists_counter += 1\n-                    file.write(dictionary[\"url_user\"] + \"\\n\")\n-            file.write(f\"Total Websites Username Detected On : {exists_counter}\\n\")\n+        if not args.no_txt:\n+            with open(result_file, \"w\", encoding=\"utf-8\") as file:\n+                exists_counter = 0\n+                for website_name in results:\n+                    dictionary = results[website_name]\n+                    if dictionary.get(\"status\").status == QueryStatus.CLAIMED:\n+                        exists_counter += 1\n+                        file.write(dictionary[\"url_user\"] + \"\\n\")\n+                file.write(f\"Total Websites Username Detected On : {exists_counter}\\n\")\n \n         if args.csv:\n             result_file = f\"{username}.csv\"\n", "test_patch": "", "problem_statement": "Flag needed to disable file output\n### Discussed in https://github.com/sherlock-project/sherlock/discussions/2247\r\n\r\n___\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **ovalofficer** August  7, 2024</sup>\r\nHi, I'm making a web wrapper for Sherlock but I want to disable the file output. Is there a switch I can use to turn it off without editing Sherlock's source?\r\n\r\nI couldn't find out how to do it. Sorry if it's something obvious</div>\r\n\r\n___\r\n\r\nThis flag is to be a temporary feature, becoming the default in 0.16.0.\n", "hints_text": "", "created_at": "2024-08-21T11:07:34Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 2215, "instance_id": "sherlock-project__sherlock-2215", "issue_numbers": ["2130"], "base_commit": "501cb3dce27494265a0993335dab517070dadab5", "patch": "diff --git a/sherlock/sherlock.py b/sherlock/sherlock.py\n--- a/sherlock/sherlock.py\n+++ b/sherlock/sherlock.py\n@@ -30,7 +30,6 @@\n )\n \n from requests_futures.sessions import FuturesSession    # noqa: E402\n-from torrequest import TorRequest                       # noqa: E402\n from sherlock.result import QueryStatus                 # noqa: E402\n from sherlock.result import QueryResult                 # noqa: E402\n from sherlock.notify import QueryNotify                 # noqa: E402\n@@ -206,6 +205,15 @@ def sherlock(\n     query_notify.start(username)\n     # Create session based on request methodology\n     if tor or unique_tor:\n+        try:\n+            from torrequest import TorRequest  # noqa: E402\n+        except ImportError:\n+            print(\"Important!\")\n+            print(\"> Dependencies for --tor and --unique-tor are now optional, and WILL BE DEPRECATED in a future release of Sherlock.\")\n+            print(\"> If you've installed Sherlock via pip, you can install with the dependency with `pip install sherlock-project[tor]`.\")\n+            print(\"> Other packages should refer to their documentation, or install separately with `pip install torrequest`.\\n\")\n+            sys.exit(query_notify.finish())\n+\n         # Requests using Tor obfuscation\n         try:\n             underlying_request = TorRequest()\n", "test_patch": "", "problem_statement": "Make torrequest (and other deps) optional\n<!--\r\n\r\n######################################################################\r\n  WARNING!\r\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE\r\n######################################################################\r\n\r\n-->\r\n\r\n## Checklist\r\n<!--\r\nPut x into all boxes (like this [x]) once you have completed what they say.\r\nMake sure complete everything in the checklist.\r\n-->\r\n- [x] I'm reporting a feature request\r\n- [x] I've checked for similar feature requests including closed ones\r\n\r\n## Description\r\n<!-- \r\nProvide a detailed description of the feature you would like Sherlock to have\r\n-->\r\n\r\nHi,\r\n\r\nIt would be cool if `sherlock.py` was modified a bit to not *require* the `torrequest` import if I have no interest in downloading via tor, preferably deferring to importing when it's actually needed or maybe wrapping in an exception handler and/or stubbing out. \r\n\r\nConsidering tor downloading won't work anyways without tor actually installed, shedding off an additional dependency (or two, I can't find `stem` being imported anywhere but it seems related) would be nice. The motivation behind this is `torrequest` and `stem` aren't currently packaged in gentoo's tree but all the other deps are.\r\n\r\nIn the same vein, `exrex` is only used within the tests but is pulled in the dependency list even for end-user installs. Moving this out to test-depends or something (I know python has this functionality, forget the name) would make sense.\r\n\n", "hints_text": "torrequest wasn't available on Fedora / EPEL either. Seems like a dead project and I don't want to package something 6 years out of date. Here's my patch file that I'm using to remove it from my own build --\r\n\r\nhttps://github.com/ppfeister/pkg/blob/master/sherlock/0001-Remove-tor.patch\r\n\r\nNote that my patch is against the **new** package, #2111, which is pending code review\r\n\r\nRemoving features this way isn't ideal, but it's a fine short term fix in my opinion. I would like to figure something out for torrequest soon but that's my own fix for packaging in the meantime\r\n\r\nI remember looking into removing stem but I don't remember why I didn't....... will have to investigate now. It may be a depend of another depend or something...\r\n\r\nexrex has been removed from the dependency list in #2127, although it's very likely that I'll be adding it back for other tests. If I do, it'll be a dev depend and not in the default group. Should be gtg there either way.\n> Removing features this way isn't ideal\r\n\r\nYeah, I'm interested in something much less destructive. Literally just moving the import would make things function until `--tor` is passed. Which is an acceptable tradeoff considering the app would fail anyways if tor isn't installed.\nAlso, not sure if it was before or after your PR, but worth noting ----\r\n\r\nI have actually removed the exrex dependency entirely with the shift to Poetry, tox, and pytest. So that _specific_ issue is resolved.", "created_at": "2024-07-01T02:51:34Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 2214, "instance_id": "sherlock-project__sherlock-2214", "issue_numbers": ["2205"], "base_commit": "501cb3dce27494265a0993335dab517070dadab5", "patch": "diff --git a/sherlock/sherlock.py b/sherlock/sherlock.py\n--- a/sherlock/sherlock.py\n+++ b/sherlock/sherlock.py\n@@ -168,6 +168,7 @@ def sherlock(\n     query_notify: QueryNotify,\n     tor: bool = False,\n     unique_tor: bool = False,\n+    dump_response: bool = False,\n     proxy=None,\n     timeout=60,\n ):\n@@ -457,6 +458,34 @@ def sherlock(\n             raise ValueError(\n                 f\"Unknown Error Type '{error_type}' for \" f\"site '{social_network}'\"\n             )\n+        \n+        if dump_response:\n+            print(\"+++++++++++++++++++++\")\n+            print(f\"TARGET NAME   : {social_network}\")\n+            print(f\"USERNAME      : {username}\")\n+            print(f\"TARGET URL    : {url}\")\n+            print(f\"TEST METHOD   : {error_type}\")\n+            try:\n+                print(f\"STATUS CODES  : {net_info['errorCode']}\")\n+            except KeyError:\n+                pass\n+            print(\"Results...\")\n+            try:\n+                print(f\"RESPONSE CODE : {r.status_code}\")\n+            except Exception:\n+                pass\n+            try:\n+                print(f\"ERROR TEXT    : {net_info['errorMsg']}\")\n+            except KeyError:\n+                pass\n+            print(\">>>>> BEGIN RESPONSE TEXT\")\n+            try:\n+                print(r.text)\n+            except Exception:\n+                pass\n+            print(\"<<<<< END RESPONSE TEXT\")\n+            print(\"VERDICT       : \" + str(query_status))\n+            print(\"+++++++++++++++++++++\")\n \n         # Notify caller about results of query.\n         result = QueryResult(\n@@ -595,6 +624,13 @@ def main():\n         default=None,\n         help=\"Make requests over a proxy. e.g. socks5://127.0.0.1:1080\",\n     )\n+    parser.add_argument(\n+        \"--dump-response\",\n+        action=\"store_true\",\n+        dest=\"dump_response\",\n+        default=False,\n+        help=\"Dump the HTTP response to stdout for targeted debugging.\",\n+    )\n     parser.add_argument(\n         \"--json\",\n         \"-j\",\n@@ -783,6 +819,7 @@ def main():\n             query_notify,\n             tor=args.tor,\n             unique_tor=args.unique_tor,\n+            dump_response=args.dump_response,\n             proxy=args.proxy,\n             timeout=args.timeout,\n         )\n", "test_patch": "", "problem_statement": "Add target debug flag\n### Description\n\nAdd target debug flags to dump output of request (easier adjustment for false positives)\n\n### Code of Conduct\n\n- [X] I agree to follow this project's Code of Conduct\n", "hints_text": "", "created_at": "2024-07-01T02:19:40Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 2213, "instance_id": "sherlock-project__sherlock-2213", "issue_numbers": ["2204"], "base_commit": "501cb3dce27494265a0993335dab517070dadab5", "patch": "diff --git a/sherlock/__init__.py b/sherlock/__init__.py\n--- a/sherlock/__init__.py\n+++ b/sherlock/__init__.py\n@@ -5,6 +5,9 @@\n \n \"\"\"\n \n+# This variable is only used to check for ImportErrors induced by users running as script rather than as module or package\n+import_error_test_var = None\n+\n __shortname__   = \"Sherlock\"\n __longname__    = \"Sherlock: Find Usernames Across Social Networks\"\n __version__     = \"0.14.4\"\ndiff --git a/sherlock/sherlock.py b/sherlock/sherlock.py\n--- a/sherlock/sherlock.py\n+++ b/sherlock/sherlock.py\n@@ -7,12 +7,20 @@\n networks.\n \"\"\"\n \n+import sys\n+\n+try:\n+    from sherlock.__init__ import import_error_test_var # noqa: F401\n+except ImportError:\n+    print(\"Did you run Sherlock with `python3 sherlock/sherlock.py ...`?\")\n+    print(\"This is an outdated method. Please see https://sherlockproject.xyz/installation for up to date instructions.\")\n+    sys.exit(1)\n+\n import csv\n import signal\n import pandas as pd\n import os\n import re\n-import sys\n from argparse import ArgumentParser, RawDescriptionHelpFormatter\n from time import monotonic\n \n", "test_patch": "", "problem_statement": "Check if Sherlock is package or script at runtime\n### Description\n\nMany tutorials and walkthroughs exist for Sherlock, and they all use the old not-really-installed \"install\" method. With this, after the transition to a proper installable package, many users have opened bug reports relating to failed imports, when following these now outdated guides.\r\n\r\nOne of two things should happen to alleviate this --\r\n\r\n- [ ] Choose at runtime between proper module imports and relative script imports\r\n- [ ] Test at runtime if Sherlock is being ran as a package or as a script, and display a more informative error message if as a script\r\n\r\nThe former is more \"friendly\" in that it allows for old-style use, but the latter is more \"proper\" in my mind and more assertive in its use as a package. I lean towards the latter.\n\n### Code of Conduct\n\n- [X] I agree to follow this project's Code of Conduct\n", "hints_text": "", "created_at": "2024-07-01T01:41:37Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 2146, "instance_id": "sherlock-project__sherlock-2146", "issue_numbers": ["2140"], "base_commit": "945a364970852a477f0796a5569627c12a7bb470", "patch": "diff --git a/devel/site-list.py b/devel/site-list.py\n--- a/devel/site-list.py\n+++ b/devel/site-list.py\n@@ -4,7 +4,7 @@\n import json\n \n # Read the data.json file\n-with open(\"../sherlock/resources/data.json\", \"r\", encoding=\"utf-8\") as data_file:\n+with open(\"sherlock/resources/data.json\", \"r\", encoding=\"utf-8\") as data_file:\n     data: dict = json.load(data_file)\n \n # Removes schema-specific keywords for proper processing\n@@ -23,7 +23,7 @@\n         site_file.write(f\"1. ![](https://www.google.com/s2/favicons?domain={url_main}) [{social_network}]({url_main}) {is_nsfw}\\n\")\n \n # Overwrite the data.json file with sorted data\n-with open(\"../sherlock/resources/data.json\", \"w\") as data_file:\n+with open(\"sherlock/resources/data.json\", \"w\") as data_file:\n     sorted_data = json.dumps(data, indent=2, sort_keys=True)\n     data_file.write(sorted_data)\n     data_file.write(\"\\n\")\n", "test_patch": "", "problem_statement": "sync-json-data workflow failure\nReference job ran for 7811945\r\nLikely incorrect file path\r\n\r\nIssue created for tracking purposes.\n", "hints_text": "My guess is you don't need the ../\r\n\r\nFor example this:\r\nhttps://github.com/sherlock-project/sherlock/blob/945a364970852a477f0796a5569627c12a7bb470/devel/site-list.py#L7\r\n\r\nShould be:\r\n`with open(\"sherlock/resources/data.json\", \"r\", encoding=\"utf-8\") as data_file:`\r\n\nThat's my guess as well. Haven't gotten around to testing yet though as I'm stuck fixing segfaults on my svcman project (having _so_ much fun)\r\n\r\nDon't let @sdushantha see this because I think `../` was my suggestion in a code review\nWoops, I'll fix that today :sweat_smile: ", "created_at": "2024-05-31T08:51:59Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 2123, "instance_id": "sherlock-project__sherlock-2123", "issue_numbers": ["2113"], "base_commit": "f2090bd19806cece29b0acc9fe7801ef6230856e", "patch": "diff --git a/sherlock/sherlock.py b/sherlock/sherlock.py\n--- a/sherlock/sherlock.py\n+++ b/sherlock/sherlock.py\n@@ -382,11 +382,13 @@ def sherlock(\n         query_status = QueryStatus.UNKNOWN\n         error_context = None\n \n-        # As WAFs advance and evolve, they will occasionally block Sherlock and lead to false positives\n-        # and negatives. Fingerprints should be added here to filter results that fail to bypass WAFs.\n-        # Fingerprints should be highly targetted. Comment at the end of each fingerprint to indicate target and date.\n+        # As WAFs advance and evolve, they will occasionally block Sherlock and\n+        # lead to false positives and negatives. Fingerprints should be added\n+        # here to filter results that fail to bypass WAFs. Fingerprints should\n+        # be highly targetted. Comment at the end of each fingerprint to\n+        # indicate target and date fingerprinted.\n         WAFHitMsgs = [\n-            '.loading-spinner{visibility:hidden}body.no-js .challenge-running{display:none}body.dark{background-color:#222;color:#d9d9d9}body.dark a{color:#fff}body.dark a:hover{color:#ee730a;text-decoration:underline}body.dark .lds-ring div{border-color:#999 transparent transparent}body.dark .font-red{color:#b20f03}body.dark .big-button,body.dark .pow-button{background-color:#4693ff;color:#1d1d1d}body.dark #challenge-success-text{background-image:url(data:image/svg+xml;base64,', # 2024-04-08 Cloudflare\n+            '.loading-spinner{visibility:hidden}body.no-js .challenge-running{display:none}body.dark{background-color:#222;color:#d9d9d9}body.dark a{color:#fff}body.dark a:hover{color:#ee730a;text-decoration:underline}body.dark .lds-ring div{border-color:#999 transparent transparent}body.dark .font-red{color:#b20f03}body.dark', # 2024-05-13 Cloudflare\n             '{return l.onPageView}}),Object.defineProperty(r,\"perimeterxIdentifiers\",{enumerable:' # 2024-04-09 PerimeterX / Human Security\n         ]\n \n", "test_patch": "", "problem_statement": "False positives (Kick, LibraryThing)\nKick and LibraryThing showing F+ for `ehjtohrtjh`\r\n\r\n_(Issue is only for tracking purposes and so I don't forget -- will pr later)_\n", "hints_text": "I did a false positive on both of those sites when I ran Sherlock inside a Fedora container. But upon running Sherlock on my computer, I only got false positives on LibraryThing. I'm unsure as to why Kick returned a false positive, but it looks like LibraryThing has bot protection", "created_at": "2024-05-14T02:49:45Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 2109, "instance_id": "sherlock-project__sherlock-2109", "issue_numbers": ["2108"], "base_commit": "d0c8282e5efc36f61dcbb107edbabb6ff5b28939", "patch": "diff --git a/sherlock/sites.py b/sherlock/sites.py\n--- a/sherlock/sites.py\n+++ b/sherlock/sites.py\n@@ -177,6 +177,8 @@ def __init__(self, data_file_path=None):\n                 raise ValueError(\n                     f\"Problem parsing json contents at '{data_file_path}':  Missing attribute {error}.\"\n                 )\n+            except TypeError as error:\n+                print(f\"Encountered TypeError parsing json contents for target '{site_name}' at {data_file_path}\\nSkipping target.\\n\")\n \n         return\n \n", "test_patch": "", "problem_statement": "SHERLOCK// ERROR \"string indices must be integers, not 'str'  \"\ncomo puedo solucionar este error que me sale al querer usar sherlock, no se como solucionarlo la verdad\n", "hints_text": "", "created_at": "2024-05-08T02:41:37Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 2099, "instance_id": "sherlock-project__sherlock-2099", "issue_numbers": ["1338"], "base_commit": "f5796c24b3230a6af559cfb4e11b8df52964d8bb", "patch": "diff --git a/sherlock/sites.py b/sherlock/sites.py\n--- a/sherlock/sites.py\n+++ b/sherlock/sites.py\n@@ -152,6 +152,11 @@ def __init__(self, data_file_path=None):\n                 raise FileNotFoundError(f\"Problem while attempting to access \"\n                                         f\"data file '{data_file_path}'.\"\n                                         )\n+        \n+        try:\n+            site_data.pop('$schema')\n+        except:\n+            pass\n \n         self.sites = {}\n \ndiff --git a/site_list.py b/site_list.py\n--- a/site_list.py\n+++ b/site_list.py\n@@ -5,10 +5,14 @@\n \n # Read the data.json file\n with open(\"sherlock/resources/data.json\", \"r\", encoding=\"utf-8\") as data_file:\n-    data = json.load(data_file)\n+    data: dict = json.load(data_file)\n+\n+# Removes schema-specific keywords for proper processing\n+social_networks: dict = dict(data)\n+social_networks.pop('$schema')\n \n # Sort the social networks in alphanumeric order\n-social_networks = sorted(data.items())\n+social_networks: list = sorted(social_networks.items())\n \n # Write the list of supported sites to sites.md\n with open(\"sites.md\", \"w\") as site_file:\n", "test_patch": "", "problem_statement": "feat: add json schema validation\nAdds a JSON Schema that validates `data.json` and `removed_sites.json`. I've already validated the existing data with it and can confirm both files pass. \ud83d\udc4d\ud83c\udffe \r\n\r\nPrepends the following property to both files:\r\n```json\r\n{\r\n  \"$schema\": \"{path/to/json-schema}\"\r\n}\r\n```\r\n\r\nRemoves the `rank` property from `removed_sites.json` and documentation as this is no longer relevant.\r\n\r\nRemoves the \"noPeriod\" property from Jimdo as this appears to serve on purpose.\r\n\r\n---\r\n\r\nSorry, also a question. What is the purpose of `responseUrl`? I just realized, this property is not referenced whatsoever in the actual application. \ud83e\udd14 Can this property be removed in the dataset and schema?\r\n\r\nLater I do want to make it stricter, i.e. prevent someone from using one `errorType` with the wrong additional field, i.e.\r\n```json\r\n{ \r\n  \"errorMsg\": \"Not Found\",\r\n  \"errorType\": \"status_code\"\r\n} \r\n```\r\n\r\nI figured I'd leave it like this for now and find out what `responseUrl` is about. \ud83e\udd14 \r\n\r\n### Related\r\n* Closes https://github.com/sherlock-project/sherlock/issues/1336\r\n\r\nThe goal of this is to improve the experience for developers and leave less room for human-error. It also enforces that we document and provide examples of each field, unlike the current Wiki which tends to get outdated.\r\n\r\n![image](https://user-images.githubusercontent.com/22801583/167285185-11711582-a8d1-4157-a5e9-4d590d6e71b6.png)\r\n\r\n![image](https://user-images.githubusercontent.com/22801583/167285139-15b5d326-5813-45df-8987-dfd6f7a236ad.png)\r\n\r\n![image](https://user-images.githubusercontent.com/22801583/167285147-e759a759-2734-4811-b972-ee75ed7dd530.png)    \r\n\r\n\r\n\n", "hints_text": "", "created_at": "2024-05-06T01:17:38Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 2069, "instance_id": "sherlock-project__sherlock-2069", "issue_numbers": ["1878"], "base_commit": "55c680fde1d6eb94e55870e1be6243c88732cea8", "patch": "diff --git a/sherlock/notify.py b/sherlock/notify.py\n--- a/sherlock/notify.py\n+++ b/sherlock/notify.py\n@@ -238,6 +238,15 @@ def update(self, result):\n                       Fore.WHITE + \"]\" +\n                       Fore.GREEN + f\" {self.result.site_name}:\" +\n                       Fore.YELLOW + f\" {msg}\")\n+                \n+        elif result.status == QueryStatus.WAF:\n+            if self.print_all:\n+                print(Style.BRIGHT + Fore.WHITE + \"[\" +\n+                      Fore.RED + \"-\" +\n+                      Fore.WHITE + \"]\" +\n+                      Fore.GREEN + f\" {self.result.site_name}:\" +\n+                      Fore.RED + \" Blocked by bot detection\" +\n+                      Fore.YELLOW + \" (proxy may help)\")\n \n         else:\n             # It should be impossible to ever get here...\ndiff --git a/sherlock/result.py b/sherlock/result.py\n--- a/sherlock/result.py\n+++ b/sherlock/result.py\n@@ -14,6 +14,7 @@ class QueryStatus(Enum):\n     AVAILABLE = \"Available\" # Username Not Detected\n     UNKNOWN   = \"Unknown\"   # Error Occurred While Trying To Detect Username\n     ILLEGAL   = \"Illegal\"   # Username Not Allowable For This Site\n+    WAF       = \"WAF\"       # Request blocked by WAF (i.e. Cloudflare)\n \n     def __str__(self):\n         \"\"\"Convert Object To String.\ndiff --git a/sherlock/sherlock.py b/sherlock/sherlock.py\n--- a/sherlock/sherlock.py\n+++ b/sherlock/sherlock.py\n@@ -378,9 +378,20 @@ def sherlock(\n         query_status = QueryStatus.UNKNOWN\n         error_context = None\n \n+        # As WAFs advance and evolve, they will occasionally block Sherlock and lead to false positives\n+        # and negatives. Fingerprints should be added here to filter results that fail to bypass WAFs.\n+        # Fingerprints should be highly targetted. Comment at the end of each fingerprint to indicate target and date.\n+        WAFHitMsgs = [\n+            '.loading-spinner{visibility:hidden}body.no-js .challenge-running{display:none}body.dark{background-color:#222;color:#d9d9d9}body.dark a{color:#fff}body.dark a:hover{color:#ee730a;text-decoration:underline}body.dark .lds-ring div{border-color:#999 transparent transparent}body.dark .font-red{color:#b20f03}body.dark .big-button,body.dark .pow-button{background-color:#4693ff;color:#1d1d1d}body.dark #challenge-success-text{background-image:url(data:image/svg+xml;base64,', # 2024-04-08 Cloudflare\n+            '{return l.onPageView}}),Object.defineProperty(r,\"perimeterxIdentifiers\",{enumerable:' # 2024-04-09 PerimeterX / Human Security\n+        ]\n+\n         if error_text is not None:\n             error_context = error_text\n \n+        elif any(hitMsg in r.text for hitMsg in WAFHitMsgs):\n+            query_status = QueryStatus.WAF\n+\n         elif error_type == \"message\":\n             # error_flag True denotes no error found in the HTML\n             # error_flag False denotes error found in the HTML\n", "test_patch": "", "problem_statement": "Fiverr false positive\n<!--\r\n\r\n######################################################################\r\n  WARNING!\r\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE\r\n######################################################################\r\n\r\n-->\r\n\r\n## Checklist\r\n<!--\r\nPut x into all boxes (like this [x]) once you have completed what they say.\r\nMake sure complete everything in the checklist.\r\n-->\r\n- [ x] I'm reporting a website that is returning **false positive** results\r\n- [ x] I've checked for similar site support requests including closed ones\r\n- [ x] I've checked for pull requests attempting to fix this false positive\r\n- [ x] I'm only reporting **one** site (create a separate issue for each site)\r\n\r\n## Description\r\n<!--\r\nProvide the username that is causing Sherlock to return a false positive, along with any other information that might help us fix this false positive.\r\n-->\r\n\r\nhttps://www.fiverr.com/fincali1979 is not a real fiverr account I checked for closed issues and fiverr is marked as fixed, but it doesn't work now\r\n\n", "hints_text": "Hey I want to work on this issue, is it still open?", "created_at": "2024-04-08T21:56:24Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 2068, "instance_id": "sherlock-project__sherlock-2068", "issue_numbers": ["2071", "2096"], "base_commit": "55c680fde1d6eb94e55870e1be6243c88732cea8", "patch": "diff --git a/sherlock/sherlock.py b/sherlock/sherlock.py\n--- a/sherlock/sherlock.py\n+++ b/sherlock/sherlock.py\n@@ -232,7 +232,7 @@ def sherlock(\n         # A user agent is needed because some sites don't return the correct\n         # information since they think that we are bots (Which we actually are...)\n         headers = {\n-            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:55.0) Gecko/20100101 Firefox/55.0\",\n+            \"User-Agent\": \"Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/116.0\",\n         }\n \n         if \"headers\" in net_info:\n@@ -351,7 +351,6 @@ def sherlock(\n \n         # Get the expected error type\n         error_type = net_info[\"errorType\"]\n-        error_code = net_info.get(\"errorCode\")\n \n         # Retrieve future and ensure it has finished\n         future = net_info[\"request_future\"]\n@@ -407,13 +406,16 @@ def sherlock(\n             else:\n                 query_status = QueryStatus.AVAILABLE\n         elif error_type == \"status_code\":\n-            # Checks if the Status Code is equal to the optional \"errorCode\" given in 'data.json'\n-            if error_code == r.status_code:\n+            error_codes = net_info.get(\"errorCode\")\n+            query_status = QueryStatus.CLAIMED\n+\n+            # Type consistency, allowing for both singlets and lists in manifest\n+            if isinstance(error_codes, int):\n+                error_codes = [error_codes]\n+            \n+            if error_codes is not None and r.status_code in error_codes:\n                 query_status = QueryStatus.AVAILABLE\n-            # Checks if the status code of the response is 2XX\n-            elif not r.status_code >= 300 or r.status_code < 200:\n-                query_status = QueryStatus.CLAIMED\n-            else:\n+            elif r.status_code >= 300 or r.status_code < 200:\n                 query_status = QueryStatus.AVAILABLE\n         elif error_type == \"response_url\":\n             # For this detection method, we have turned off the redirect.\n", "test_patch": "", "problem_statement": "Yandex Music has a captcha\n<!--\r\n\r\n######################################################################\r\n  WARNING!\r\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE\r\n######################################################################\r\n\r\n-->\r\n\r\n## Checklist\r\n<!--\r\nPut x into all boxes (like this [x]) once you have completed what they say.\r\nMake sure complete everything in the checklist.\r\n-->\r\n- [x] I'm reporting a website that is returning **false positive** results\r\n- [x] I've checked for similar site support requests including closed ones\r\n- [x] I've checked for pull requests attempting to fix this false positive\r\n- [x] I'm only reporting **one** site (create a separate issue for each site)\r\n\r\n## Description\r\n<!--\r\nProvide the username that is causing Sherlock to return a false positive, along with any other information that might help us fix this false positive.\r\n-->\r\nHere's a random username that can't possibly exist: [ecfhlmiuewfimcuhem](https://music.yandex/users/ecfhlmiuewfimcuhem/playlists).\r\n\r\nHere's the username from [data.json](https://github.com/sherlock-project/sherlock/blob/master/sherlock/resources/data.json#L2214): [ya.playlist](https://music.yandex/users/ya.playlist/playlists)\r\n\r\nWhen I visit either, I get a captcha (note: JS is disabled in my browser):\r\n![image](https://github.com/sherlock-project/sherlock/assets/65649991/3c93012d-991a-46a2-b0af-60edf5772eec)\r\n\r\nUnless Sherlock uses Selenium/Pyppeteer, which i highly doubt (it's not in requirements.txt), this captcha isn't really avoidable (I think). Maybe it even shows up with JS enabled, which I didn't check.\r\n\r\nI'm not opening a PR removing YandexMusic because it could be an issue that only happens for me, or maybe it's possible to bypass this captcha.\nUse lite version of archive.org, change error message.\nArchive.org detects the use of old browsers, and redirects them to a \"lite\" version of archive.org. For some reason, the requests module is also redirected. This PR fixes this issue.\n", "hints_text": "\n", "created_at": "2024-04-08T02:37:41Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 1974, "instance_id": "sherlock-project__sherlock-1974", "issue_numbers": ["1968"], "base_commit": "8965cf12e3df28ee78a5d01da14b8aec40d8e8b4", "patch": "diff --git a/sherlock/sherlock.py b/sherlock/sherlock.py\n--- a/sherlock/sherlock.py\n+++ b/sherlock/sherlock.py\n@@ -617,7 +617,7 @@ def main():\n         nargs=\"+\",\n         metavar=\"USERNAMES\",\n         action=\"store\",\n-        help=\"One or more usernames to check with social networks. Check similar usernames using {%%} (replace to '_', '-', '.').\",\n+        help=\"One or more usernames to check with social networks. Check similar usernames using {?} (replace to '_', '-', '.').\",\n     )\n     parser.add_argument(\n         \"--browse\",\n", "test_patch": "", "problem_statement": "Trouble with the \"{%}\" argument \n<!--\r\n\r\n######################################################################\r\n  WARNING!\r\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE\r\n######################################################################\r\n\r\n-->\r\n\r\n\r\n## Checklist\r\n<!--\r\nPut x into all boxes (like this [x]) once you have completed what they say.\r\nMake sure complete everything in the checklist.\r\n-->\r\n\r\n- [x] I'm reporting a bug in Sherlock's functionality\r\n- [x] The bug I'm reporting is not a false positive or a false negative\r\n- [x] I've verified that I'm running the latest version of Sherlock\r\n- [x] I've checked for similar bug reports including closed ones\r\n- [ ] I've checked for pull requests that attempt to fix this bug\r\n\r\n## Description\r\n<!--\r\nProvide a detailed description of the bug that you have found in Sherlock.\r\nProvide the version of Sherlock you are running.\r\n-->\r\n\r\n(Didn't know if this was better fit as a question or a bug, sry for the inconvenience)\r\n\r\nI have sherlock set up in a docker container and everything works 100% fine (eg.1) EXCEPT for trying to use the {%} argument (eg.2), am i stupid and have the syntax wrong?, is this powershell interpretation issue? or is this a genuine bug.\r\n\r\n\r\neg.1 terminal functioning as intended\r\n\r\n      PS C:\\Windows\\system32> docker run --rm -t mysherlock-image foobar\r\n      [*] Checking username foobar on:\r\n      \r\n      [+] 7Cups: https://www.7cups.com/@foobar\r\n      [+] 8tracks: https://8tracks.com/foobar\r\n      [+] About.me: https://about.me/foobar\r\n      [+] Academia.edu: https://independent.academia.edu/foobar\r\n      [+] Airliners: https://www.airliners.net/user/foobar/profile/photos\r\n      [+] AllMyLinks: https://allmylinks.com/foobar\r\n      [+] Amino: https://aminoapps.com/u/foobar\r\n      [+] Apple Developer: https://developer.apple.com/forums/profile/foobar\r\n      PS C:\\Windows\\system32> ^C\r\n\r\neg.2 throwing big angry errors when using {%}\r\n      \r\n      PS C:\\Windows\\system32> docker run --rm -t mysherlock-image foo{%}bar\r\n      usage: sherlock.py [-h] [--version] [--verbose] [--folderoutput FOLDEROUTPUT] [--output OUTPUT] [--tor] [--unique-tor] [--csv] \r\n      [-x    lsx] [--site SITE_NAME] [--proxy PROXY_URL] [--json JSON_FILE] [--timeout TIMEOUT] [--print-all] [--print-found]\r\n      [--no-color] [--browse] [--local] [--nsfw]\r\n      sherlock.py: error: unrecognized arguments: -encodedCommand JQA= bar -inputFormat xml text\r\n\r\n\r\nI'm 99% sure i'm probably just stupid, and this is a me problem. but thought id post anyway just in case. \r\n\r\n*Latest build as of today*\r\n\n", "hints_text": "Hi @TryMyWagon, thanks for opening this issue.\r\n\r\nYou are not stupid. I checked, and you are right about the problem.\r\n\r\nIt seems we made a small error in the documentation, and we apologize for that. I will fix it. \ud83d\ude05\r\n\r\nYou should use `{?}` instead of `{%}`:\r\n\r\n```bash\r\npython sherlock user{?}name\r\n```\r\n\r\nor:\r\n\r\n```bash\r\npython sherlock 'user{?}name'\r\n```", "created_at": "2024-01-19T21:23:58Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 1963, "instance_id": "sherlock-project__sherlock-1963", "issue_numbers": ["1960"], "base_commit": "4525fb48ad90d95cb7b9d7f01a93f226242cde81", "patch": "diff --git a/sherlock/sherlock.py b/sherlock/sherlock.py\n--- a/sherlock/sherlock.py\n+++ b/sherlock/sherlock.py\n@@ -470,12 +470,14 @@ def timeout_check(value):\n     NOTE:  Will raise an exception if the timeout in invalid.\n     \"\"\"\n \n-    if value <= 0:\n+    float_value = float(value)\n+\n+    if float_value <= 0:\n         raise ArgumentTypeError(\n             f\"Invalid timeout value: {value}. Timeout must be a positive number.\"\n         )\n \n-    return float(value)\n+    return float_value\n \n \n def handler(signal_received, frame):\n", "test_patch": "", "problem_statement": "--timeout error\n<!--\r\n\r\n######################################################################\r\n  WARNING!\r\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE.\r\n######################################################################\r\n\r\n-->\r\n\r\n## Checklist\r\n<!--\r\nPut x into all boxes (like this [x]) once you have completed what they say.\r\nMake sure complete everything in the checklist.\r\n-->\r\n- [X] I'm asking a question regarding Sherlock\r\n- [ ] My question is not a tech support question.\r\n\r\n\r\n## Question\r\n\r\nim having the following error: sherlock: error: argument --timeout: invalid timeout_check value: '1'\r\nWhat should I write as argument of --timeout?\n", "hints_text": "I am having the exact same problem, so if someone gets the answer tell us!", "created_at": "2023-12-25T02:00:45Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 1723, "instance_id": "sherlock-project__sherlock-1723", "issue_numbers": ["1480"], "base_commit": "61bb34b0213482164247df496a063b9e41b98f78", "patch": "diff --git a/sherlock/sherlock.py b/sherlock/sherlock.py\n--- a/sherlock/sherlock.py\n+++ b/sherlock/sherlock.py\n@@ -28,7 +28,7 @@\n from colorama import init\n \n module_name = \"Sherlock: Find Usernames Across Social Networks\"\n-__version__ = \"0.14.3\"\n+__version__ = \"0.14.2\"\n \n \n class SherlockFuturesSession(FuturesSession):\n@@ -537,12 +537,12 @@ def main():\n                         help=\"Time (in seconds) to wait for response to requests (Default: 60)\"\n                         )\n     parser.add_argument(\"--print-all\",\n-                        action=\"store_true\", dest=\"print_all\",\n+                        action=\"store_true\", dest=\"print_all\", default=False,\n                         help=\"Output sites where the username was not found.\"\n                         )\n     parser.add_argument(\"--print-found\",\n-                        action=\"store_false\", dest=\"print_all\", default=False,\n-                        help=\"Output sites where the username was found.\"\n+                        action=\"store_true\", dest=\"print_found\", default=True,\n+                        help=\"Output sites where the username was found (also if exported as file).\"\n                         )\n     parser.add_argument(\"--no-color\",\n                         action=\"store_true\", dest=\"no_color\", default=False,\n@@ -640,7 +640,6 @@ def main():\n         site_data = site_data_all\n     else:\n         # User desires to selectively run queries on a sub-set of the site list.\n-\n         # Make sure that the sites are supported & build up pruned site database.\n         site_data = {}\n         site_missing = []\n@@ -668,7 +667,6 @@ def main():\n                                     browse=args.browse)\n \n     # Run report on all specified users.\n-\n     all_usernames = []\n     for username in args.username:\n         if (CheckForParameter(username)):\n@@ -726,6 +724,9 @@ def main():\n                                  ]\n                                 )\n                 for site in results:\n+                    if args.print_found and not args.print_all and results[site][\"status\"].status != QueryStatus.CLAIMED:\n+                        continue\n+\n                     response_time_s = results[site][\"status\"].query_time\n                     if response_time_s is None:\n                         response_time_s = \"\"\n@@ -748,6 +749,9 @@ def main():\n             response_time_s = []\n \n             for site in results:\n+                if args.print_found and not args.print_all and results[site][\"status\"].status != QueryStatus.CLAIMED:\n+                    continue\n+\n                 if response_time_s is None:\n                     response_time_s.append(\"\")\n                 else:\n@@ -768,4 +772,3 @@ def main():\n \n if __name__ == \"__main__\":\n     main()\n-    # Notify caller that all queries are finished.\n", "test_patch": "", "problem_statement": "fixes #1431\nAdding --print-found as an argument will make the CVS and/or xlsx files to only contain those accounts that were found.\r\n\r\nPreviously, there was only the variable 'print_all', which was set by the parameters '--print-all' and '--print-found'. Since the behaviour is to print only those that are found, the parameter '--print-found' was not producing any difference. With the changes, now '--print-found' will make the csv and xlsx file have only the accounts that were found.\r\n\r\nfixes #1431 \n", "hints_text": "I need to take further look into this. Will do it this week when I get some extra time", "created_at": "2023-03-06T08:36:32Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 1518, "instance_id": "sherlock-project__sherlock-1518", "issue_numbers": ["1284"], "base_commit": "11b519b7ad39f89ebd14da69fb9880269dc2c8ce", "patch": "diff --git a/sherlock/sherlock.py b/sherlock/sherlock.py\n--- a/sherlock/sherlock.py\n+++ b/sherlock/sherlock.py\n@@ -551,7 +551,7 @@ def main():\n     parser.add_argument(\"username\",\n                         nargs=\"+\", metavar=\"USERNAMES\",\n                         action=\"store\",\n-                        help=\"One or more usernames to check with social networks.\"\n+                        help=\"One or more usernames to check with social networks. Check similar usernames using {%%} (replace to '_', '-', '.').\"\n                         )\n     parser.add_argument(\"--browse\", \"-b\",\n                         action=\"store_true\", dest=\"browse\", default=False,\n", "test_patch": "", "problem_statement": "Check multiple similar usernames\n<!--\r\n\r\n######################################################################\r\n  WARNING!\r\n  IGNORING THE FOLLOWING TEMPLATE WILL RESULT IN ISSUE CLOSED AS INCOMPLETE\r\n######################################################################\r\n\r\n-->\r\n\r\n## Checklist\r\n<!--\r\nPut x into all boxes (like this [x]) once you have completed what they say.\r\nMake sure complete everything in the checklist.\r\n-->\r\n- [x] I'm reporting a feature request\r\n- [x] I've checked for similar feature requests including closed ones\r\n\r\n## Description\r\n<!-- \r\nProvide a detailed description of the feature you would like Sherlock to have\r\n-->\r\n\r\nIt's good to search similar usernames. for example when searching for `user{?}name` we should also check for: `_`, `-` and `.`\r\n1. `username`\r\n2. `user.name`\r\n3. `user-name`\r\n4. `user_name`\r\n\n", "hints_text": "I can work on it.\nwhen inputting sherlock {username} just add more,\r\nexample: sherlock PxINKY P_xINKY Px_INKY > pink.txt\r\n\r\nno need to make a feature if you can just write 3 more words\nClosing this as it's been PR-ed and merged already.\r\n* https://github.com/sherlock-project/sherlock/pull/1298\nActually sorry, I realize there is no documentation on this in the README. \ud83e\udd14 \r\nI'll reopen it, later someone (probably me) can go document it.\nThree more days\n\nSent from Yahoo Mail on Android \n \n  On Mon, Apr 4, 2022 at 2:14 PM, ***@***.***> wrote:   \n\n\nwhen inputting sherlock {username} just add more,\nexample: sherlock PxINKY P_xINKY Px_INKY > pink.txt\n\nno need to make a feature if you can just write 3 more words\n\n\u2014\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you are subscribed to this thread.Message ID: ***@***.***>\n  \n", "created_at": "2022-10-05T07:54:32Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 911, "instance_id": "sherlock-project__sherlock-911", "issue_numbers": ["909"], "base_commit": "ecf7e4d02f976c0c244beb4a0b3be688a4b9ea6a", "patch": "diff --git a/site_list.py b/site_list.py\n--- a/site_list.py\n+++ b/site_list.py\n@@ -18,11 +18,8 @@\n         url_main = data.get(social_network).get(\"urlMain\")\n         pool.append((social_network, url_main))\n \n-    index = 1\n     for social_network, url_main in pool:\n-        site_file.write(f'{index}. [{social_network}]({url_main})\\n')\n-        index = index + 1\n-\n+        site_file.write(f'1. [{social_network}]({url_main})\\n')\n \n sorted_json_data = json.dumps(data, indent=2, sort_keys=True)\n \n", "test_patch": "", "problem_statement": "[site_list.py] change numbering to reduce commit size\nletting the markdown renderer do the counting lets us reduce commit size and avoide possible merge conflicts.\r\n\r\n---\r\n\r\n```\r\n1.\r\n1.\r\n1.\r\n```\r\nrenders to:\r\n\r\n1.\r\n1.\r\n1.\n", "hints_text": "", "created_at": "2020-12-19T10:35:32Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 704, "instance_id": "sherlock-project__sherlock-704", "issue_numbers": ["610"], "base_commit": "0f51e01686031e984749f84c8f377fdacdb579d4", "patch": "diff --git a/sherlock/sherlock.py b/sherlock/sherlock.py\n--- a/sherlock/sherlock.py\n+++ b/sherlock/sherlock.py\n@@ -438,9 +438,6 @@ def main():\n                         action=\"store_true\",  dest=\"verbose\", default=False,\n                         help=\"Display extra debugging information and metrics.\"\n                         )\n-    parser.add_argument(\"--rank\", \"-r\",\n-                        action=\"store_true\", dest=\"rank\", default=False,\n-                        help=\"Present websites ordered by their Alexa.com global rank in popularity.\")\n     parser.add_argument(\"--folderoutput\", \"-fo\", dest=\"folderoutput\",\n                         help=\"If using multiple usernames, the output of the results will be saved to this folder.\"\n                         )\n@@ -557,15 +554,6 @@ def main():\n                 f\"Error: Desired sites not found: {', '.join(site_missing)}.\")\n             sys.exit(1)\n \n-    if args.rank:\n-        # Sort data by rank\n-        site_dataCpy = dict(site_data)\n-        ranked_sites = sorted(site_data, key=lambda k: (\"rank\" not in k, site_data[k].get(\"rank\", sys.maxsize)))\n-        site_data = {}\n-        for site in ranked_sites:\n-            site_data[site] = site_dataCpy.get(site)\n-\n-\n     #Create notify object for query results.\n     query_notify = QueryNotifyPrint(result=None,\n                                     verbose=args.verbose,\ndiff --git a/sherlock/sites.py b/sherlock/sites.py\n--- a/sherlock/sites.py\n+++ b/sherlock/sites.py\n@@ -11,9 +11,8 @@\n \n \n class SiteInformation():\n-    def __init__(self, name, url_home, url_username_format, popularity_rank,\n-                 username_claimed, username_unclaimed,\n-                 information):\n+    def __init__(self, name, url_home, url_username_format, username_claimed,\n+                 username_unclaimed, information):\n         \"\"\"Create Site Information Object.\n \n         Contains information about a specific web site.\n@@ -32,10 +31,6 @@ def __init__(self, name, url_home, url_username_format, popularity_rank,\n                                          usernames would show up under the\n                                          \"https://somesite.com/users/\" area of\n                                          the web site.\n-        popularity_rank        -- Integer indicating popularity of site.\n-                                  In general, smaller numbers mean more\n-                                  popular (\"0\" or None means ranking\n-                                  information not available).\n         username_claimed       -- String containing username which is known\n                                   to be claimed on web site.\n         username_unclaimed     -- String containing username which is known\n@@ -58,11 +53,6 @@ def __init__(self, name, url_home, url_username_format, popularity_rank,\n         self.url_home            = url_home\n         self.url_username_format = url_username_format\n \n-        if (popularity_rank is None) or (popularity_rank == 0):\n-            #We do not know the popularity, so make site go to bottom of list.\n-            popularity_rank = sys.maxsize\n-        self.popularity_rank     = popularity_rank\n-\n         self.username_claimed    = username_claimed\n         self.username_unclaimed  = username_unclaimed\n         self.information         = information\n@@ -118,22 +108,19 @@ def __init__(self, data_file_path=None):\n         \"\"\"\n \n         if data_file_path is None:\n-            #Use internal default.\n-            data_file_path = \\\n-                os.path.join(os.path.dirname(os.path.realpath(__file__)),\n-                             \"resources/data.json\"\n-                            )\n-\n-        #Ensure that specified data file has correct extension.\n-        if \".json\" != data_file_path[-5:].lower():\n+            # The default data file is the live data.json which is in the GitHub repo. The reason why we are using\n+            # this instead of the local one is so that the user has the most up to date data. This prevents\n+            # users from creating issue about false positives which has already been fixed or having outdated data\n+            data_file_path = \"https://raw.githubusercontent.com/sherlock-project/sherlock/master/sherlock/resources/data.json\"\n+\n+        # Ensure that specified data file has correct extension.\n+        if not data_file_path.lower().endswith(\".json\"):\n             raise FileNotFoundError(f\"Incorrect JSON file extension for \"\n                                     f\"data file '{data_file_path}'.\"\n                                    )\n \n-        if ( (\"http://\"  == data_file_path[:7].lower()) or\n-             (\"https://\" == data_file_path[:8].lower())\n-           ):\n-            #Reference is to a URL.\n+        if \"http://\"  == data_file_path[:7].lower() or \"https://\" == data_file_path[:8].lower():\n+            # Reference is to a URL.\n             try:\n                 response = requests.get(url=data_file_path)\n             except Exception as error:\n@@ -172,14 +159,11 @@ def __init__(self, data_file_path=None):\n         #Add all of site information from the json file to internal site list.\n         for site_name in site_data:\n             try:\n-                #If popularity unknown, make site be at bottom of list.\n-                popularity_rank = site_data[site_name].get(\"rank\", sys.maxsize)\n \n                 self.sites[site_name] = \\\n                     SiteInformation(site_name,\n                                     site_data[site_name][\"urlMain\"],\n                                     site_data[site_name][\"url\"],\n-                                    popularity_rank,\n                                     site_data[site_name][\"username_claimed\"],\n                                     site_data[site_name][\"username_unclaimed\"],\n                                     site_data[site_name]\n@@ -192,32 +176,17 @@ def __init__(self, data_file_path=None):\n \n         return\n \n-    def site_name_list(self, popularity_rank=False):\n+    def site_name_list(self):\n         \"\"\"Get Site Name List.\n \n         Keyword Arguments:\n         self                   -- This object.\n-        popularity_rank        -- Boolean indicating if list should be sorted\n-                                  by popularity rank.\n-                                  Default value is False.\n-                                  NOTE:  List is sorted in ascending\n-                                         alphabetical order is popularity rank\n-                                         is not requested.\n \n         Return Value:\n         List of strings containing names of sites.\n         \"\"\"\n \n-        if popularity_rank:\n-            #Sort in ascending popularity rank order.\n-            site_rank_name = \\\n-                sorted([(site.popularity_rank,site.name) for site in self],\n-                       key=operator.itemgetter(0)\n-                      )\n-            site_names = [name for _,name in site_rank_name]\n-        else:\n-            #Sort in ascending alphabetical order.\n-            site_names = sorted([site.name for site in self], key=str.lower)\n+        site_names = sorted([site.name for site in self], key=str.lower)\n \n         return site_names\n \ndiff --git a/site_list.py b/site_list.py\n--- a/site_list.py\n+++ b/site_list.py\n@@ -1,40 +1,12 @@\n \"\"\"Sherlock: Supported Site Listing\n-This module generates the listing of supported sites.\n+This module generates the listing of supported sites\n+which can be found in sites.md\n+It also organizes all the sites in alphanumeric order\n \"\"\"\n import json\n-import sys\n-import requests\n-import threading\n-import xml.etree.ElementTree as ET\n-from datetime import datetime\n-from argparse import ArgumentParser, RawDescriptionHelpFormatter\n \n pool = list()\n \n-def get_rank(domain_to_query, dest):\n-\n-    #Retrieve ranking data via alexa API\n-    url = f\"http://data.alexa.com/data?cli=10&url={domain_to_query}\"\n-    xml_data = requests.get(url).text\n-    root = ET.fromstring(xml_data)\n-    try:\n-        #Get ranking for this site.\n-        dest['rank'] = int(root.find(\".//REACH\").attrib[\"RANK\"])\n-    except:\n-        #We did not find the rank for some reason.\n-        print(f\"Error retrieving rank information for '{domain_to_query}'\")\n-        print(f\"     Returned XML is |{xml_data}|\")\n-\n-    return\n-\n-parser = ArgumentParser(formatter_class=RawDescriptionHelpFormatter\n-                        )\n-parser.add_argument(\"--rank\",\"-r\",\n-                    action=\"store_true\",  dest=\"rank\", default=False,\n-                    help=\"Update all website ranks (not recommended).\"\n-                    )\n-args = parser.parse_args()\n-\n with open(\"sherlock/resources/data.json\", \"r\", encoding=\"utf-8\") as data_file:\n     data = json.load(data_file)\n \n@@ -44,30 +16,17 @@ def get_rank(domain_to_query, dest):\n \n     for social_network in data:\n         url_main = data.get(social_network).get(\"urlMain\")\n-        data.get(social_network)[\"rank\"] = 0\n-        if args.rank:\n-            th = threading.Thread(target=get_rank, args=(url_main, data.get(social_network)))\n-        else:\n-            th = None\n-        pool.append((social_network, url_main, th))\n-        if args.rank:\n-            th.start()\n+        pool.append((social_network, url_main))\n \n     index = 1\n-    for social_network, url_main, th in pool:\n-        if args.rank:\n-            th.join()\n+    for social_network, url_main in pool:\n         site_file.write(f'{index}. [{social_network}]({url_main})\\n')\n-        sys.stdout.write(\"\\r{0}\".format(f\"Updated {index} out of {data_length} entries\"))\n-        sys.stdout.flush()\n         index = index + 1\n \n-    if args.rank:\n-        site_file.write(f'\\nAlexa.com rank data fetched at ({datetime.utcnow()} UTC)\\n')\n \n sorted_json_data = json.dumps(data, indent=2, sort_keys=True)\n \n with open(\"sherlock/resources/data.json\", \"w\") as data_file:\n     data_file.write(sorted_json_data)\n \n-print(\"\\nFinished updating supported site listing!\")\n+print(\"Finished updating supported site listing!\")\n", "test_patch": "", "problem_statement": "Ranking using site_list.py only works from certain countries\nHi,\r\n\r\nFor some strange reason `site_list.py` seems to be working for some people and not for others. When I run `python3 site_list.py -r`, to update the ranking, all the ranks get set to 0 and I get errors about the XML data that is returned by data.alexa.com. This is because all I am getting is this:\r\n![Screenshot 2020-05-17 at 07 53 41](https://user-images.githubusercontent.com/27065646/82136986-dabf6b80-9813-11ea-938c-5efa1e520bc0.png)\r\n\r\n\r\n\r\nBut when I use a VPN and change my location from Norway to Dallas, which is a city in the US, I seem to get the expected response:\r\n![updated](https://user-images.githubusercontent.com/27065646/82137013-10645480-9814-11ea-9840-e2104451a317.png)\r\n\r\nFrom this, we can understand that this API seems to not be working properly in certain countries.\r\n\r\nThis issue has been seen here:\r\nhttps://github.com/matomo-org/matomo/issues/13427\r\nhttps://stackoverflow.com/questions/3676376/fetching-alexa-data#comment87619041_6224304\r\n\r\n\r\nI personally think, if the ranking does not work for everyone, then it would be best to remove it.\n", "hints_text": "If we remove this script's access to the Alexa API, then we will have to remove the aspects of Sherlock that use the site ranking.  Is that OK?\r\n\r\nI am thinking that if we automate the invocation of this script using GitHub actions, then no one will have to run it on their own computer any more.  Since the GitHub Actions for Sherlock appear to be running in the US, then it will work reliably.\r\n\r\nWhile the script does generally work for me, it still flakes out on some sites.  I think it is because Sherlock has enough sites that it is exceeding the API limits.\n> If we remove this script's access to the Alexa API, then we will have to remove the aspects of Sherlock that use the site ranking. Is that OK?\r\n\r\nYeah I personally think that doing so would be fine because like you mentioned, its flakes out on some sites and that might be because its exceeding the API limits.\r\n\r\nSo, removing the site ranking would be the best thing to do as it is not stable.\nIt seems like it better to remove the site ranking because I tried running `site_list.py` using a VPN, where my location was Los Angeles and I keep getting this response:\r\n```xml\r\n<!-- Need more Alexa data?  Find our APIs here: https://aws.amazon.com/alexa/ -->\r\n```\r\n\r\nThere is rate limit", "created_at": "2020-08-07T19:15:53Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 139, "instance_id": "sherlock-project__sherlock-139", "issue_numbers": ["131"], "base_commit": "adab51e580080897c22ce19cbd0626da6341c11b", "patch": "diff --git a/site_list.py b/site_list.py\n--- a/site_list.py\n+++ b/site_list.py\n@@ -7,6 +7,11 @@\n with open(\"data.json\", \"r\", encoding=\"utf-8\") as data_file:\n     data = json.load(data_file)\n \n+sorted_json_data = json.dumps(data, indent=2, sort_keys=True)\n+\n+with open(\"data.json\", \"w\") as data_file:\n+    data_file.write(sorted_json_data)\n+\n with open(\"sites.md\", \"w\") as site_file:\n     site_file.write(f'## List Of Supported Sites ({len(data)} Sites In Total!)\\n')\n \n", "test_patch": "", "problem_statement": "Sites sorting\nIt may be a good idea to sort the sites in sites.md and data.json alphabetically. When I'm looking for sites to add, I always have to Ctrl+F in this repo or just scroll through the file... Also when seeing the results, it's just chaos.\n", "hints_text": "Yeah, I have same struggle. It's good to sort them.\nA bit of an addition to this idea, how about adding an option to sort by alexa.com rank?\nIt's great @ptalmeida, but I'm afraid that the addition time to fetch ranks make it take too long.\nMaybe it should be incorporated into the json data file and updated, per example, with sites_list.py.", "created_at": "2019-01-23T13:10:37Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 135, "instance_id": "sherlock-project__sherlock-135", "issue_numbers": ["128"], "base_commit": "fba27cd709d684c0f5a4f644c8db71a3de6b10cb", "patch": "diff --git a/sherlock.py b/sherlock.py\n--- a/sherlock.py\n+++ b/sherlock.py\n@@ -208,13 +208,27 @@ def sherlock(username, site_data, verbose=False, tor=False, unique_tor=False, pr\n                 if net_info[\"errorType\"] == 'status_code':\n                     request_method = session.head\n \n+            if net_info[\"errorType\"] == \"response_url\":\n+                #Site forwards request to a different URL if username not\n+                #found.  Disallow the redirect so we can capture the\n+                #http status from the original URL request.\n+                allow_redirects = False\n+            else:\n+                #Allow whatever redirect that the site wants to do.\n+                #The final result of the request will be what is available.\n+                allow_redirects = True\n+\n             # This future starts running the request in a new thread, doesn't block the main thread\n             if proxy != None:\n                 proxies = {\"http\": proxy, \"https\": proxy}\n-                future = request_method(\n-                    url=url, headers=headers, proxies=proxies)\n+                future = request_method(url=url, headers=headers,\n+                                        proxies=proxies,\n+                                        allow_redirects=allow_redirects\n+                                       )\n             else:\n-                future = request_method(url=url, headers=headers)\n+                future = request_method(url=url, headers=headers,\n+                                        allow_redirects=allow_redirects\n+                                       )\n \n             # Store future in data for access later\n             net_info[\"request_future\"] = future\n@@ -290,9 +304,13 @@ def sherlock(username, site_data, verbose=False, tor=False, unique_tor=False, pr\n                 exists = \"no\"\n \n         elif error_type == \"response_url\":\n-            error = net_info.get(\"errorUrl\")\n-            # Checks if the redirect url is the same as the one defined in data.json\n-            if not error in r.url:\n+            # For this detection method, we have turned off the redirect.\n+            # So, there is no need to check the response URL: it will always\n+            # match the request.  Instead, we will ensure that the response\n+            # code indicates that the request was successful (i.e. no 404, or\n+            # forward to some odd redirect).\n+            if (r.status_code >= 200) and (r.status_code < 300):\n+                #\n                 print_found(social_network, url, response_time, verbose)\n                 write_to_file(url, f)\n                 exists = \"yes\"\n", "test_patch": "diff --git a/tests/all.py b/tests/all.py\n--- a/tests/all.py\n+++ b/tests/all.py\n@@ -23,7 +23,7 @@ def test_detect_true(self):\n         \"\"\"\n \n         self.username_check(['jack'],  ['Twitter'],   exist_check=True)\n-        #self.username_check(['dfox'],  ['devRant'],   exist_check=True)\n+        self.username_check(['dfox'],  ['devRant'],   exist_check=True)\n         self.username_check(['blue'],  ['Pinterest'], exist_check=True)\n         self.username_check(['kevin'], ['Instagram'], exist_check=True)\n         self.username_check(['zuck'],  ['Facebook'],  exist_check=True)\n@@ -92,3 +92,51 @@ def test_detect_false_via_response_url(self):\n                            )\n \n         return\n+\n+\n+class SherlockSiteCoverageTests(SherlockBaseTest):\n+    def test_coverage_false_via_response_url(self):\n+        \"\"\"Test Username Does Not Exist Site Coverage (Via Response URL).\n+\n+        This test checks all sites with the \"response URL\" detection mechanism\n+        to ensure that a Username that does not exist is reported that way.\n+\n+        Keyword Arguments:\n+        self                   -- This object.\n+\n+        Return Value:\n+        N/A.\n+        Will trigger an assert if detection mechanism did not work as expected.\n+        \"\"\"\n+\n+        self.username_check(['noonewouldeverusethis7'],\n+                            [\"Pinterest\", \"iMGSRC.RU\", \"Pastebin\",\n+                             \"WordPress\", \"devRant\", \"ImageShack\", \"MeetMe\"\n+                            ],\n+                            exist_check=False\n+                           )\n+\n+        return\n+\n+    def test_coverage_true_via_response_url(self):\n+        \"\"\"Test Username Does Exist Site Coverage (Via Response URL).\n+\n+        This test checks all sites with the \"response URL\" detection mechanism\n+        to ensure that a Username that does exist is reported that way.\n+\n+        Keyword Arguments:\n+        self                   -- This object.\n+\n+        Return Value:\n+        N/A.\n+        Will trigger an assert if detection mechanism did not work as expected.\n+        \"\"\"\n+\n+        self.username_check(['blue'],\n+                            [\"Pinterest\", \"iMGSRC.RU\", \"Pastebin\",\n+                             \"WordPress\", \"devRant\", \"ImageShack\", \"MeetMe\"\n+                            ],\n+                            exist_check=True\n+                           )\n+\n+        return\n", "problem_statement": "devRant/iMGSRC.RU/ImageShack/MeetMe Not Detecting Users That Exist\nNoticed while running the tests that devRant is not working right.  @TheYahya suggested during the review of #105 that we use the usernames of founders tests (as they would be expected to never delete their accounts).  But, when I tried to find  the \"dfox\" username, it said that it did not exist.  Yet, if I go to https://devrant.com/users/dfox, I can see his profile.\r\n\r\nHere is the example command that demonstrates the problem:\r\n\r\n```\r\npython -u sherlock.py dfox --site devRant --verbose\r\n```\r\nLooks like @sdushantha added this site originally.\n", "hints_text": "This appears to be a problem with the sites that redirect an attempt to view a non-existing username to the main site.  If you try to go to https://devrant.com/users/dfoxxxxxxxxx (a user name that does not exist), then we get a redirect to the https://devrant.com/ root of the site.  Yet, the \"response_url\" checking algorithm is only looking for the configured error URL being included in the response:\r\n\r\n```python\r\n        elif error_type == \"response_url\":\r\n            error = net_info.get(\"errorUrl\")\r\n            # Checks if the redirect url is the same as the one defined in data.json\r\n            if not error in r.url:\r\n                print_found(social_network, url, response_time, verbose)\r\n                write_to_file(url, f)\r\n                exists = \"yes\"\r\n                amount = amount+1\r\n            else:\r\n                print_not_found(social_network, response_time, verbose)\r\n                exists = \"no\"\r\n```\r\nSince \"https://devrant.com/\" is in \"https://devrant.com/users/dfox\", it is marked as an unknown username.\r\n\r\nPinterest (for example) has a response URL of \"https://www.pinterest.com/?show_error=true\". So this does not cause the problem, as there is no overlap between a good username and the error URL.", "created_at": "2019-01-23T02:43:44Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 109, "instance_id": "sherlock-project__sherlock-109", "issue_numbers": ["82"], "base_commit": "7e5bac0cb8374030405e2138ff04f5a9525f2527", "patch": "diff --git a/sherlock.py b/sherlock.py\n--- a/sherlock.py\n+++ b/sherlock.py\n@@ -13,11 +13,12 @@\n import sys\n import platform\n import re\n-from argparse import ArgumentParser, RawDescriptionHelpFormatter\n-from concurrent.futures import ThreadPoolExecutor\n+from time import time\n \n import requests\n-from colorama import Back, Fore, Style, init\n+from argparse import ArgumentParser, RawDescriptionHelpFormatter\n+from concurrent.futures import ThreadPoolExecutor\n+from colorama import Fore, Style, init\n from requests_futures.sessions import FuturesSession\n from torrequest import TorRequest\n \n@@ -28,28 +29,78 @@\n # TODO: fix tumblr\n \n \n+class ElapsedFuturesSession(FuturesSession):\n+    \"\"\"\n+    Extends FutureSession to add a response time metric to each request.\n+\n+    This is taken (almost) directly from here: https://github.com/ross/requests-futures#working-in-the-background\n+    \"\"\"\n+\n+    def request(self, method, url, hooks={}, *args, **kwargs):\n+        start = time()\n+\n+        def timing(r, *args, **kwargs):\n+            elapsed_sec = time() - start\n+            r.elapsed = round(elapsed_sec * 1000)\n+\n+        try:\n+            if isinstance(hooks['response'], (list, tuple)):\n+                # needs to be first so we don't time other hooks execution\n+                hooks['response'].insert(0, timing)\n+            else:\n+                hooks['response'] = [timing, hooks['response']]\n+        except KeyError:\n+            hooks['response'] = timing\n+\n+        return super(ElapsedFuturesSession, self).request(method, url, hooks=hooks, *args, **kwargs)\n+\n+\n def open_file(fname):\n     return open(fname, \"a\")\n \n+\n def write_to_file(url, f):\n     f.write(url + \"\\n\")\n \n+\n def final_score(amount, f):\n     f.write(\"Total: \"+str(amount) + \"\\n\")\n \n-def print_error(err, errstr, var, debug=False):\n+\n+def print_error(err, errstr, var, verbose=False):\n     print(Style.BRIGHT + Fore.WHITE + \"[\" +\n           Fore.RED + \"-\" +\n           Fore.WHITE + \"]\" +\n           Fore.RED + f\" {errstr}\" +\n-          Fore.YELLOW + f\" {err if debug else var}\")\n+          Fore.YELLOW + f\" {err if verbose else var}\")\n+\n+\n+def format_response_time(response_time, verbose):\n+    return \" [{} ms]\".format(response_time) if verbose else \"\"\n+\n+\n+def print_found(social_network, url, response_time, verbose=False):\n+    print((Style.BRIGHT + Fore.WHITE + \"[\" +\n+           Fore.GREEN + \"+\" +\n+           Fore.WHITE + \"]\" +\n+           format_response_time(response_time, verbose) +\n+           Fore.GREEN + \" {}:\").format(social_network), url)\n+\n+\n+def print_not_found(social_network, response_time, verbose=False):\n+    print((Style.BRIGHT + Fore.WHITE + \"[\" +\n+           Fore.RED + \"-\" +\n+           Fore.WHITE + \"]\" +\n+           format_response_time(response_time, verbose) +\n+           Fore.GREEN + \" {}:\" +\n+           Fore.YELLOW + \" Not Found!\").format(social_network))\n \n \n def get_response(request_future, error_type, social_network, verbose=False):\n     try:\n         rsp = request_future.result()\n         if rsp.status_code:\n-            return rsp, error_type\n+            return rsp, error_type, rsp.elapsed\n     except requests.exceptions.HTTPError as errh:\n         print_error(errh, \"HTTP Error:\", social_network, verbose)\n     except requests.exceptions.ConnectionError as errc:\n@@ -58,7 +109,7 @@ def get_response(request_future, error_type, social_network, verbose=False):\n         print_error(errt, \"Timeout Error:\", social_network, verbose)\n     except requests.exceptions.RequestException as err:\n         print_error(err, \"Unknown error:\", social_network, verbose)\n-    return None, \"\"\n+    return None, \"\", -1\n \n \n def sherlock(username, site_data, verbose=False, tor=False, unique_tor=False):\n@@ -119,8 +170,8 @@ def sherlock(username, site_data, verbose=False, tor=False, unique_tor=False):\n         underlying_request = TorRequest()\n         underlying_session = underlying_request.session()\n \n-    # Create multi-threaded session for all requests\n-    session = FuturesSession(executor=executor, session=underlying_session)\n+    # Create multi-threaded session for all requests. Use our custom FuturesSession that exposes response time\n+    session = ElapsedFuturesSession(executor=executor, session=underlying_session)\n \n     # Results from analysis of all sites\n     results_total = {}\n@@ -193,10 +244,10 @@ def sherlock(username, site_data, verbose=False, tor=False, unique_tor=False):\n \n         # Retrieve future and ensure it has finished\n         future = net_info[\"request_future\"]\n-        r, error_type = get_response(request_future=future,\n-                                     error_type=error_type,\n-                                     social_network=social_network,\n-                                     verbose=verbose)\n+        r, error_type, response_time = get_response(request_future=future,\n+                                                    error_type=error_type,\n+                                                    social_network=social_network,\n+                                                    verbose=verbose)\n \n         # Attempt to get request information\n         try:\n@@ -212,59 +263,35 @@ def sherlock(username, site_data, verbose=False, tor=False, unique_tor=False):\n             error = net_info.get(\"errorMsg\")\n             # Checks if the error message is in the HTML\n             if not error in r.text:\n-\n-                print((Style.BRIGHT + Fore.WHITE + \"[\" +\n-                       Fore.GREEN + \"+\" +\n-                       Fore.WHITE + \"]\" +\n-                       Fore.GREEN + \" {}:\").format(social_network), url)\n+                print_found(social_network, url, response_time, verbose)\n                 write_to_file(url, f)\n                 exists = \"yes\"\n                 amount=amount+1\n             else:\n-                print((Style.BRIGHT + Fore.WHITE + \"[\" +\n-                       Fore.RED + \"-\" +\n-                       Fore.WHITE + \"]\" +\n-                       Fore.GREEN + \" {}:\" +\n-                       Fore.YELLOW + \" Not Found!\").format(social_network))\n+                print_not_found(social_network, response_time, verbose)\n                 exists = \"no\"\n \n         elif error_type == \"status_code\":\n             # Checks if the status code of the response is 2XX\n             if not r.status_code >= 300 or r.status_code < 200:\n-\n-                print((Style.BRIGHT + Fore.WHITE + \"[\" +\n-                       Fore.GREEN + \"+\" +\n-                       Fore.WHITE + \"]\" +\n-                       Fore.GREEN + \" {}:\").format(social_network), url)\n+                print_found(social_network, url, response_time, verbose)\n                 write_to_file(url, f)\n                 exists = \"yes\"\n                 amount=amount+1\n             else:\n-                print((Style.BRIGHT + Fore.WHITE + \"[\" +\n-                       Fore.RED + \"-\" +\n-                       Fore.WHITE + \"]\" +\n-                       Fore.GREEN + \" {}:\" +\n-                       Fore.YELLOW + \" Not Found!\").format(social_network))\n+                print_not_found(social_network, response_time, verbose)\n                 exists = \"no\"\n \n         elif error_type == \"response_url\":\n             error = net_info.get(\"errorUrl\")\n             # Checks if the redirect url is the same as the one defined in data.json\n             if not error in r.url:\n-\n-                print((Style.BRIGHT + Fore.WHITE + \"[\" +\n-                       Fore.GREEN + \"+\" +\n-                       Fore.WHITE + \"]\" +\n-                       Fore.GREEN + \" {}:\").format(social_network), url)\n+                print_found(social_network, url, response_time, verbose)\n                 write_to_file(url, f)\n                 exists = \"yes\"\n                 amount=amount+1\n             else:\n-                print((Style.BRIGHT + Fore.WHITE + \"[\" +\n-                       Fore.RED + \"-\" +\n-                       Fore.WHITE + \"]\" +\n-                       Fore.GREEN + \" {}:\" +\n-                       Fore.YELLOW + \" Not Found!\").format(social_network))\n+                print_not_found(social_network, response_time, verbose)\n                 exists = \"no\"\n \n         elif error_type == \"\":\n@@ -276,11 +303,12 @@ def sherlock(username, site_data, verbose=False, tor=False, unique_tor=False):\n             exists = \"error\"\n \n         # Save exists flag\n-        results_site['exists']        = exists\n+        results_site['exists'] = exists\n \n         # Save results from request\n-        results_site['http_status']   = http_status\n+        results_site['http_status'] = http_status\n         results_site['response_text'] = response_text\n+        results_site['response_time_ms'] = response_time\n \n         # Add this site's results into final dictionary with all of the other results.\n         results_total[social_network] = results_site\n@@ -311,7 +339,7 @@ def main():\n                        )\n     parser.add_argument(\"--verbose\", \"-v\", \"-d\", \"--debug\",\n                         action=\"store_true\",  dest=\"verbose\", default=False,\n-                        help=\"Display extra debugging information.\"\n+                        help=\"Display extra debugging information and metrics.\"\n                        )\n     parser.add_argument(\"--quiet\", \"-q\",\n                         action=\"store_false\", dest=\"verbose\",\n@@ -393,7 +421,8 @@ def main():\n                                  'url_main',\n                                  'url_user',\n                                  'exists',\n-                                 'http_status'\n+                                 'http_status',\n+                                 'response_time_ms'\n                                 ]\n                                )\n                 for site in results:\n@@ -402,9 +431,11 @@ def main():\n                                      results[site]['url_main'],\n                                      results[site]['url_user'],\n                                      results[site]['exists'],\n-                                     results[site]['http_status']\n+                                     results[site]['http_status'],\n+                                     results[site]['response_time_ms']\n                                     ]\n                                    )\n \n+\n if __name__ == \"__main__\":\n     main()\n\\ No newline at end of file\n", "test_patch": "", "problem_statement": "Display response times in verbose mode\n## Feature Request\r\n\r\nIt would be nice to display the response time for each request. \r\n\r\n### Why?\r\n\r\n- It would help us determine which sites cause the program to slow down. If a site is very slow and non-critical, we could remove it to speed up Sherlock.\r\n- The more metrics the merrier! Has very little overhead, so why not :)\r\n\r\n### User Experience\r\n\r\nWe would only display this information in verbose mode (`-v` flag). The information can be displayed in each output line as:\r\n\r\n```txt\r\n[+] [78 ms] Quora: https://www.quora.com/profile/nareddyt\r\n```\r\n\r\nFurthermore, these response times can be exported in the CSV.\r\n\r\n### Implementation Details\r\n\r\nWe would just need to store the time reach request was created in the `net_info` or `results_site` dictionaries. Then when the request is done, we would note the end time.\r\n\r\nNote there is some math involved in calculating times. It's not a simple `end-start` because the `result` for each response is extracted in the order of requests (not as soon as a request finishes). This is something I still need to think about...\n", "hints_text": "Sounds good. Maybe then we could sort the sites by their response time and check the fastest ones first.\nSounds great @nareddyt  \ud83d\ude0a, Let me know if you going to give it a hand \u263a\ufe0f \nHere is my initial prototype of this feature. I was able to make use of [requests-futures' built-in hooks API](https://github.com/ross/requests-futures#working-in-the-background) to compute the response times per request in a parallel fashion. This introduces very little overhead.\r\n\r\n![image](https://user-images.githubusercontent.com/11142171/50747375-96749200-1201-11e9-9185-52e0e6838673.png)\r\n\r\nFor now, I will keep this feature simple and only display the response times in the console / csv. We can work on more advanced uses of these metrics (like the suggestion by @Czechball) once this initial feature is merged.\r\n\r\nI'll send out a PR once I clean up my code and also thoroughly test it :)", "created_at": "2019-01-07T17:19:28Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 96, "instance_id": "sherlock-project__sherlock-96", "issue_numbers": ["95", "95"], "base_commit": "0d857030939da206f9e6098241ff80d869ae80e8", "patch": "diff --git a/sherlock.py b/sherlock.py\n--- a/sherlock.py\n+++ b/sherlock.py\n@@ -152,11 +152,11 @@ def sherlock(username, verbose=False, tor=False, unique_tor=False):\n             url = net_info[\"url\"].format(username)\n             results_site[\"url_user\"] = url\n \n-            # If only the status_code is needed don't download the body\n-            if net_info[\"errorType\"] == 'status_code':\n-                request_method = session.head\n-            else:\n-                request_method = session.get\n+            request_method = session.get\n+            if social_network != \"GitHub\":\n+                # If only the status_code is needed don't download the body\n+                if net_info[\"errorType\"] == 'status_code':\n+                    request_method = session.head\n \n             # This future starts running the request in a new thread, doesn't block the main thread\n             future = request_method(url=url, headers=headers)\n@@ -380,4 +380,4 @@ def main():\n                                    )\n \n if __name__ == \"__main__\":\n-    main()\n+    main()\n\\ No newline at end of file\n", "test_patch": "", "problem_statement": "GitHub doesn't work\nI would like to say it's all in the title. GitHub accounts can't be found.\nGitHub doesn't work\nI would like to say it's all in the title. GitHub accounts can't be found.\n", "hints_text": "\n", "created_at": "2019-01-05T17:47:48Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 77, "instance_id": "sherlock-project__sherlock-77", "issue_numbers": ["44"], "base_commit": "992e22059a129c5d445689e8a598d7dde9c7f70c", "patch": "diff --git a/sherlock.py b/sherlock.py\n--- a/sherlock.py\n+++ b/sherlock.py\n@@ -21,7 +21,7 @@\n from torrequest import TorRequest\n \n module_name = \"Sherlock: Find Usernames Across Social Networks\"\n-__version__ = \"2018.01.04\"\n+__version__ = \"0.1.0\"\n amount=0\n \n # TODO: fix tumblr\n", "test_patch": "", "problem_statement": "Version Number System\nI do not think that the version number system should use the date.  There are multiple systems out there, but they are all flavors of major.minor.maintenance. This allows the version number to have some meaning to other people.\r\n\r\nhttps://github.com/sdushantha/sherlock/blob/e2c4dbf1ef69db80a9c6ebf591be874686e04301/sherlock.py#L20\n", "hints_text": "I do understand your point, but what I was thinking of was that, since we are updating the code frequently, I don't think everyone is going to have the latest version on their computer. So, if use the year.month.day format, users will get and idea if their version has been out dated or not. \r\n\r\nIf major.minor.maintenance is the standard and has a more meaning to other people, I'm more than  happy to change it. \ud83d\ude0a\n@hoadlck Can you delete your fork of this repo?\r\nI want to transfer the ownership of this repo to you. To do that, you first have to delete your fork.\n@sdushantha  Uh... you are the owner of this repo. You cannot abandon your child! :)\r\n\r\nI am on break now, so I had some free time to contribute. But, on 2019-01-02, the daily grind starts up again, and I am unsure how much time I will have to dedicate to this.\n@hoadlck I'm not abandoning my child, I'm giving my child off to adoption :)\r\n\r\nIt is too difficult for me to maintain this repo. So I really want to give it away.\nWait, this are not the end of the conversation, right? I can still see https://github.com/TheYahya/sherlock/blob/508eb88724dbe20dedf07dc00527ad4f32c93a77/sherlock.py#L24 at the moment, yet the latest commit is already on `2019.01.03`. Maybe just have something that are regularly used like `0.0.1`, etc.\nI think `semantic versioning` is more reasonable, It would be better to change it to that \u263a\ufe0f ", "created_at": "2019-01-03T21:51:53Z"}
{"repo": "sherlock-project/sherlock", "pull_number": 49, "instance_id": "sherlock-project__sherlock-49", "issue_numbers": ["47"], "base_commit": "f9d59270a31b66b205d4777f72f9adadf8acac0d", "patch": "diff --git a/sherlock.py b/sherlock.py\n--- a/sherlock.py\n+++ b/sherlock.py\n@@ -90,7 +90,8 @@ def sherlock(username, verbose=False, tor=False, unique_tor=False):\n     }\n \n     # Load the data\n-    with open(\"data.json\", \"r\", encoding=\"utf-8\") as raw:\n+    data_file_path = os.path.join(os.path.dirname(os.path.realpath(__file__)), \"data.json\")\n+    with open(data_file_path, \"r\", encoding=\"utf-8\") as raw:\n         data = json.load(raw)\n \n     # Allow 1 thread for each external service, so `len(data)` threads total\n", "test_patch": "", "problem_statement": "Fails when invoking script from a different directory\n```\r\n$ python sherlock/sherlock.py user123\r\n                                              .\"\"\"-.\r\n                                             /      \\\r\n ____  _               _            _        |  _..--'-.\r\n/ ___|| |__   ___ _ __| | ___   ___| |__    >.`__.-\"\"\\;\"`\r\n\\___ \\| '_ \\ / _ \\ '__| |/ _ \\ / __| |/ /   / /(     ^\\\r\n ___) | | | |  __/ |  | | (_) | (__|   <    '-`)     =|-.\r\n|____/|_| |_|\\___|_|  |_|\\___/ \\___|_|\\_\\    /`--.'--'   \\ .-.\r\n                                           .'`-._ `.\\    | J /\r\n                                          /      `--.|   \\__/\r\n\r\n[*] Removing previous file: user123.txt\r\n[*] Checking username user123 on:\r\nTraceback (most recent call last):\r\n  File \"sherlock/sherlock.py\", line 313, in <module>\r\n    main()\r\n  File \"sherlock/sherlock.py\", line 289, in main\r\n    results = sherlock(username, verbose=args.verbose, tor=args.tor, unique_tor=args.unique_tor)\r\n  File \"sherlock/sherlock.py\", line 93, in sherlock\r\n    raw = open(\"data.json\", \"r\", encoding=\"utf-8\")\r\nFileNotFoundError: [Errno 2] No such file or directory: 'data.json'\r\n```\n", "hints_text": "", "created_at": "2018-12-31T05:53:45Z"}
