diff --git a/src/attr/_compat.py b/src/attr/_compat.py
--- a/src/attr/_compat.py
+++ b/src/attr/_compat.py
@@ -15,6 +15,7 @@
 PY_3_10_PLUS = sys.version_info[:2] >= (3, 10)
 PY_3_12_PLUS = sys.version_info[:2] >= (3, 12)
 PY_3_13_PLUS = sys.version_info[:2] >= (3, 13)
+PY_3_14_PLUS = sys.version_info[:2] >= (3, 14)
 
 
 if sys.version_info < (3, 8):
@@ -25,6 +26,19 @@
 else:
     from typing import Protocol  # noqa: F401
 
+if PY_3_14_PLUS:  # pragma: no cover
+    import annotationlib
+
+    _get_annotations = annotationlib.get_annotations
+
+else:
+
+    def _get_annotations(cls):
+        """
+        Get annotations for *cls*.
+        """
+        return cls.__dict__.get("__annotations__", {})
+
 
 class _AnnotationExtractor:
     """
diff --git a/src/attr/_make.py b/src/attr/_make.py
--- a/src/attr/_make.py
+++ b/src/attr/_make.py
@@ -23,6 +23,7 @@
     PY_3_8_PLUS,
     PY_3_10_PLUS,
     _AnnotationExtractor,
+    _get_annotations,
     get_generic_base,
 )
 from .exceptions import (
@@ -308,13 +309,6 @@ def _has_own_attribute(cls, attrib_name):
     return attrib_name in cls.__dict__
 
 
-def _get_annotations(cls):
-    """
-    Get annotations for *cls*.
-    """
-    return cls.__dict__.get("__annotations__", {})
-
-
 def _collect_base_attrs(cls, taken_attr_names):
     """
     Collect attr.ibs from base classes of *cls*, except *taken_attr_names*.
