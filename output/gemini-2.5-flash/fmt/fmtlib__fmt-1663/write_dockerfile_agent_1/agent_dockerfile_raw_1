<dockerfile>
# Base image specification. Defines the foundation OS and architecture for the container
FROM ubuntu:22.04
ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC

# System dependencies installation. Installs essential tools and libraries required for development and runtime
# build-essential provides g++ and make. cmake is for the build system.
# git is for cloning the repository. curl for general purpose.
# python3 is listed as a required tool for build scripts.
# clang for alternative compiler testing.
# ninja-build for faster build times, as seen in project configurations.
RUN apt update && apt install -y \
    build-essential \
    cmake \
    git \
    curl \
    python3 \
    clang \
    ninja-build \
    && rm -rf /var/lib/apt/lists/*

# Set default workdir to /testbed.
WORKDIR /testbed/

# Target Project setup. Clones source code and checkouts to the target version.
RUN git clone https://github.com/fmtlib/fmt /testbed && \
    cd /testbed && \
    git reset --hard 8d9d528bf52c60864802844e8acf16db09dae19a && \
    git remote remove origin

# Build the project. For C++ projects, building the project is equivalent to "installing in development mode"
# as it compiles the library and test executables. This step does not run tests.
RUN mkdir -p /testbed/build && \
    cd /testbed/build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release && \
    make -j$(nproc)
</dockerfile>