{
    "task_id": "catchorg__Catch2-1673",
    "setup_info": {
        "repo_path": "testbed/catchorg__Catch2-1673_2025-06-29_23-16-37",
        "repo_cache_path": "testbed/catchorg/Catch2_cache"
    },
    "task_info": {
        "repo": "catchorg/Catch2",
        "pull_number": 1673,
        "instance_id": "catchorg__Catch2-1673",
        "issue_numbers": [
            "1670"
        ],
        "base_commit": "6f32c67ea763ff189b55eeb24980ddc2522a80fb",
        "patch": "diff --git a/projects/CMakeLists.txt b/projects/CMakeLists.txt\n--- a/projects/CMakeLists.txt\n+++ b/projects/CMakeLists.txt\n@@ -378,6 +378,8 @@ set_tests_properties(FilteredSection-2 PROPERTIES FAIL_REGULAR_EXPRESSION \"No te\n add_test(NAME ApprovalTests COMMAND ${PYTHON_EXECUTABLE} ${CATCH_DIR}/scripts/approvalTests.py $<TARGET_FILE:SelfTest>)\n set_tests_properties(ApprovalTests PROPERTIES FAIL_REGULAR_EXPRESSION \"Results differed\")\n \n+add_test(NAME RegressionCheck-1670 COMMAND $<TARGET_FILE:SelfTest> \"#1670 regression check\" -c A -r compact)\n+set_tests_properties(RegressionCheck-1670 PROPERTIES PASS_REGULAR_EXPRESSION \"Passed 1 test case with 2 assertions.\")\n \n if (CATCH_USE_VALGRIND)\n     add_test(NAME ValgrindRunTests COMMAND valgrind --leak-check=full --error-exitcode=1 $<TARGET_FILE:SelfTest>)\n",
        "test_patch": "diff --git a/include/internal/catch_test_case_tracker.cpp b/include/internal/catch_test_case_tracker.cpp\n--- a/include/internal/catch_test_case_tracker.cpp\n+++ b/include/internal/catch_test_case_tracker.cpp\n@@ -139,7 +139,7 @@ namespace TestCaseTracking {\n                 m_runState = CompletedSuccessfully;\n                 break;\n             case ExecutingChildren:\n-                if( m_children.empty() || m_children.back()->isComplete() )\n+                if( std::all_of(m_children.begin(), m_children.end(), [](ITrackerPtr const& t){ return t->isComplete(); }) )\n                     m_runState = CompletedSuccessfully;\n                 break;\n \ndiff --git a/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp b/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp\n--- a/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp\n+++ b/projects/SelfTest/IntrospectiveTests/PartTracker.tests.cpp\n@@ -189,3 +189,18 @@ TEST_CASE( \"#1394 nested\", \"[.][approvals][tracker]\" ) {\n         REQUIRE(1 == 0);\n     }\n }\n+\n+// Selecting a \"not last\" section inside a test case via -c \"section\" would\n+// previously only run the first subsection, instead of running all of them.\n+// This allows us to check that `\"#1670 regression check\" -c A` leads to\n+// 2 successful assertions.\n+TEST_CASE(\"#1670 regression check\", \"[.approvals][tracker]\") {\n+    SECTION(\"A\") {\n+        SECTION(\"1\") SUCCEED();\n+        SECTION(\"2\") SUCCEED();\n+    }\n+    SECTION(\"B\") {\n+        SECTION(\"1\") SUCCEED();\n+        SECTION(\"2\") SUCCEED();\n+    }\n+}\n",
        "problem_statement": "Inconsistent behaviour of nested sections\n**Describe the bug**\r\nSuppose I have a test case with a structure like the following:\r\n```\r\nTEST_CASE(\"Nesting\")\r\n{\r\n    SECTION(\"A\") {\r\n        SECTION(\"1\") SUCCEED();\r\n        SECTION(\"2\") SUCCEED();\r\n    }\r\n    SECTION(\"B\") {\r\n        SECTION(\"1\") SUCCEED();\r\n        SECTION(\"2\") SUCCEED();\r\n    }\r\n}\r\n```\r\n\r\nUpon selecting the test case and section on the command line, I get the following results:\r\n* `./test Nesting`: All four assertions are executed;\r\n* `./test Nesting -c A`: *Only A1 is executed*;\r\n* `./test Nesting -c B`: B1 and B2 are executed.\r\n\r\n**Expected behavior**\r\n`./test Nesting -c A` should execute all subsections of section A.\r\n\r\n**Reproduction steps**\r\nSee description.\r\n\r\n**Platform information:**\r\n - Compiler+version: **GCC v9.1.1**\r\n - Catch version: **v2.8.0**, **v2.9.1**\r\n\n",
        "hints_text": "Thanks for the report.\r\n\r\nUpon further investigation, this was introduced by #1492 and affects all sections that are not the last section, in other words, in this\r\n\r\n```cpp\r\nTEST_CASE(\"Nesting\")\r\n{\r\n    SECTION(\"A\") {\r\n        SECTION(\"1\") SUCCEED();\r\n        SECTION(\"2\") SUCCEED();\r\n    }\r\n    SECTION(\"B\") {\r\n        SECTION(\"1\") SUCCEED();\r\n        SECTION(\"2\") SUCCEED();\r\n    }\r\n    SECTION(\"C\") {\r\n        SECTION(\"1\") SUCCEED();\r\n        SECTION(\"2\") SUCCEED();\r\n    }\r\n}\r\n```\r\nOnly \"C\" is unaffected.",
        "created_at": "2019-06-29T16:12:17Z",
        "version": "2.9"
    }
}