{
    "task_id": "catchorg__Catch2-2521",
    "setup_info": {
        "repo_path": "testbed/catchorg__Catch2-2521_2025-06-29_23-16-37",
        "repo_cache_path": "testbed/catchorg/Catch2_cache"
    },
    "task_info": {
        "repo": "catchorg/Catch2",
        "pull_number": 2521,
        "instance_id": "catchorg__Catch2-2521",
        "issue_numbers": [
            "2520",
            "2520"
        ],
        "base_commit": "359542d53ec142514da8a606ada8d9efd13b9678",
        "patch": "diff --git a/src/catch2/internal/catch_compiler_capabilities.hpp b/src/catch2/internal/catch_compiler_capabilities.hpp\n--- a/src/catch2/internal/catch_compiler_capabilities.hpp\n+++ b/src/catch2/internal/catch_compiler_capabilities.hpp\n@@ -53,6 +53,9 @@\n #    define CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS \\\n          _Pragma( \"GCC diagnostic ignored \\\"-Wunused-variable\\\"\" )\n \n+#    define CATCH_INTERNAL_SUPPRESS_USELESS_CAST_WARNINGS \\\n+         _Pragma( \"GCC diagnostic ignored \\\"-Wuseless-cast\\\"\" )\n+\n #    define CATCH_INTERNAL_IGNORE_BUT_WARN(...) (void)__builtin_constant_p(__VA_ARGS__)\n \n #endif\n@@ -335,6 +338,9 @@\n #if !defined(CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS)\n #   define CATCH_INTERNAL_SUPPRESS_UNUSED_VARIABLE_WARNINGS\n #endif\n+#if !defined(CATCH_INTERNAL_SUPPRESS_USELESS_CAST_WARNINGS)\n+#   define CATCH_INTERNAL_SUPPRESS_USELESS_CAST_WARNINGS\n+#endif\n #if !defined(CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS)\n #   define CATCH_INTERNAL_SUPPRESS_ZERO_VARIADIC_WARNINGS\n #endif\n",
        "test_patch": "diff --git a/src/catch2/internal/catch_test_macro_impl.hpp b/src/catch2/internal/catch_test_macro_impl.hpp\n--- a/src/catch2/internal/catch_test_macro_impl.hpp\n+++ b/src/catch2/internal/catch_test_macro_impl.hpp\n@@ -76,7 +76,10 @@\n     do { \\\n         Catch::AssertionHandler catchAssertionHandler( macroName##_catch_sr, CATCH_INTERNAL_LINEINFO, CATCH_INTERNAL_STRINGIFY(__VA_ARGS__), resultDisposition ); \\\n         try { \\\n+            CATCH_INTERNAL_START_WARNINGS_SUPPRESSION \\\n+            CATCH_INTERNAL_SUPPRESS_USELESS_CAST_WARNINGS \\\n             static_cast<void>(__VA_ARGS__); \\\n+            CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION \\\n             catchAssertionHandler.handleExceptionNotThrownAsExpected(); \\\n         } \\\n         catch( ... ) { \\\n@@ -91,7 +94,10 @@\n         Catch::AssertionHandler catchAssertionHandler( macroName##_catch_sr, CATCH_INTERNAL_LINEINFO, CATCH_INTERNAL_STRINGIFY(__VA_ARGS__), resultDisposition); \\\n         if( catchAssertionHandler.allowThrows() ) \\\n             try { \\\n+                CATCH_INTERNAL_START_WARNINGS_SUPPRESSION \\\n+                CATCH_INTERNAL_SUPPRESS_USELESS_CAST_WARNINGS \\\n                 static_cast<void>(__VA_ARGS__); \\\n+                CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION \\\n                 catchAssertionHandler.handleUnexpectedExceptionNotThrown(); \\\n             } \\\n             catch( ... ) { \\\n@@ -108,7 +114,10 @@\n         Catch::AssertionHandler catchAssertionHandler( macroName##_catch_sr, CATCH_INTERNAL_LINEINFO, CATCH_INTERNAL_STRINGIFY(expr) \", \" CATCH_INTERNAL_STRINGIFY(exceptionType), resultDisposition ); \\\n         if( catchAssertionHandler.allowThrows() ) \\\n             try { \\\n+                CATCH_INTERNAL_START_WARNINGS_SUPPRESSION \\\n+                CATCH_INTERNAL_SUPPRESS_USELESS_CAST_WARNINGS \\\n                 static_cast<void>(expr); \\\n+                CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION \\\n                 catchAssertionHandler.handleUnexpectedExceptionNotThrown(); \\\n             } \\\n             catch( exceptionType const& ) { \\\n@@ -131,7 +140,10 @@\n         Catch::AssertionHandler catchAssertionHandler( macroName##_catch_sr, CATCH_INTERNAL_LINEINFO, CATCH_INTERNAL_STRINGIFY(__VA_ARGS__) \", \" CATCH_INTERNAL_STRINGIFY(matcher), resultDisposition ); \\\n         if( catchAssertionHandler.allowThrows() ) \\\n             try { \\\n+                CATCH_INTERNAL_START_WARNINGS_SUPPRESSION \\\n+                CATCH_INTERNAL_SUPPRESS_USELESS_CAST_WARNINGS \\\n                 static_cast<void>(__VA_ARGS__); \\\n+                CATCH_INTERNAL_STOP_WARNINGS_SUPPRESSION \\\n                 catchAssertionHandler.handleUnexpectedExceptionNotThrown(); \\\n             } \\\n             catch( ... ) { \\\n",
        "problem_statement": "useless-cast warning from THROW macro family\n**Describe the bug**\r\nWe get the following error message (with -Werror) when using `REQUIRE_NOTHROW` on a void function.\r\n```\r\n.../Catch2/src/catch2/internal/catch_test_macro_impl.hpp:79:13: error: useless cast to type 'void' [-Werror=useless-cast]\r\n   79 |             static_cast<void>(__VA_ARGS__); \\\r\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n.../Catch2/src/catch2/catch_test_macros.hpp:128:34: note: in expansion of macro 'INTERNAL_CATCH_NO_THROW'\r\n  128 |   #define REQUIRE_NOTHROW( ... ) INTERNAL_CATCH_NO_THROW( \"REQUIRE_NOTHROW\", Catch::ResultDisposition::Normal, __VA_ARGS__ )\r\n      |                                  ^~~~~~~~~~~~~~~~~~~~~~~\r\nmycode.cpp:47:41: note: in expansion of macro 'REQUIRE_NOTHROW'\r\n```\r\n\r\n**Expected behavior**\r\nNo Warning.\r\n\r\n**Reproduction steps**\r\n```\r\n#include <catch2/catch_test_macros.hpp>\r\n\r\nvoid op();\r\n\r\nTEST_CASE(\"\") {\r\n    REQUIRE_NOTHROW(op());\r\n}\r\n```\r\nAlthough I was not able to reproduce it on godbolt.\r\n\r\n\r\n**Platform information:**\r\n - OS: **Windows 10**\r\n - Compiler+version: **g++.exe (Rev1, Built by MSYS2 project) 12.2.0**\r\n - We have `-Wuseless-cast` in our warning list\r\n - Catch version: **v3.1.0**\r\n\r\n\r\n**Additional context**\r\nWe just migrated from Catch 2.13.8 with the single include. Before the Code produced no warning.\r\n\r\nI'm also willing to fix this with\r\n```\r\n                if constexpr ( std::is_same_v<decltype( __VA_ARGS__ ),      \\\r\n                                              void> ) {                     \\\r\n                    __VA_ARGS__;                                            \\\r\n                } else {                                                    \\\r\n                    static_cast<void>( __VA_ARGS__ );                       \\\r\n                }                                                           \\\r\n```\nuseless-cast warning from THROW macro family\n**Describe the bug**\r\nWe get the following error message (with -Werror) when using `REQUIRE_NOTHROW` on a void function.\r\n```\r\n.../Catch2/src/catch2/internal/catch_test_macro_impl.hpp:79:13: error: useless cast to type 'void' [-Werror=useless-cast]\r\n   79 |             static_cast<void>(__VA_ARGS__); \\\r\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n.../Catch2/src/catch2/catch_test_macros.hpp:128:34: note: in expansion of macro 'INTERNAL_CATCH_NO_THROW'\r\n  128 |   #define REQUIRE_NOTHROW( ... ) INTERNAL_CATCH_NO_THROW( \"REQUIRE_NOTHROW\", Catch::ResultDisposition::Normal, __VA_ARGS__ )\r\n      |                                  ^~~~~~~~~~~~~~~~~~~~~~~\r\nmycode.cpp:47:41: note: in expansion of macro 'REQUIRE_NOTHROW'\r\n```\r\n\r\n**Expected behavior**\r\nNo Warning.\r\n\r\n**Reproduction steps**\r\n```\r\n#include <catch2/catch_test_macros.hpp>\r\n\r\nvoid op();\r\n\r\nTEST_CASE(\"\") {\r\n    REQUIRE_NOTHROW(op());\r\n}\r\n```\r\nAlthough I was not able to reproduce it on godbolt.\r\n\r\n\r\n**Platform information:**\r\n - OS: **Windows 10**\r\n - Compiler+version: **g++.exe (Rev1, Built by MSYS2 project) 12.2.0**\r\n - We have `-Wuseless-cast` in our warning list\r\n - Catch version: **v3.1.0**\r\n\r\n\r\n**Additional context**\r\nWe just migrated from Catch 2.13.8 with the single include. Before the Code produced no warning.\r\n\r\nI'm also willing to fix this with\r\n```\r\n                if constexpr ( std::is_same_v<decltype( __VA_ARGS__ ),      \\\r\n                                              void> ) {                     \\\r\n                    __VA_ARGS__;                                            \\\r\n                } else {                                                    \\\r\n                    static_cast<void>( __VA_ARGS__ );                       \\\r\n                }                                                           \\\r\n```\n",
        "hints_text": "Okay that doesn't solve the warning. So one would need to suppress it?\nOkay that doesn't solve the warning. So one would need to suppress it?",
        "created_at": "2022-09-14T08:37:37Z",
        "version": "3.1"
    }
}