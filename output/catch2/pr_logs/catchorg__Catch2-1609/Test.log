Filters: [class],[classification],[misc]

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
SelfTest is a Catch v2.7.2 host application.
Run with -? for options

-------------------------------------------------------------------------------
A METHOD_AS_TEST_CASE based test run that succeeds
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:65
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:27: PASSED:
  REQUIRE( s == "hello" )
with expansion:
  "hello" == "hello"

-------------------------------------------------------------------------------
A METHOD_AS_TEST_CASE based test run that fails
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:66
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:31: FAILED:
  REQUIRE( s == "world" )
with expansion:
  "hello" == "world"

-------------------------------------------------------------------------------
A TEST_CASE_METHOD based test run that succeeds
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:68
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:70: PASSED:
  REQUIRE( m_a == 1 )
with expansion:
  1 == 1

-------------------------------------------------------------------------------
A TEMPLATE_TEST_CASE_METHOD based test run that succeeds - int
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:73
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:74: PASSED:
  REQUIRE( Template_Fixture<TestType>::m_a == 1 )
with expansion:
  1 == 1

-------------------------------------------------------------------------------
A TEMPLATE_TEST_CASE_METHOD based test run that succeeds - float
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:73
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:74: PASSED:
  REQUIRE( Template_Fixture<TestType>::m_a == 1 )
with expansion:
  1.0f == 1

-------------------------------------------------------------------------------
A TEMPLATE_TEST_CASE_METHOD based test run that succeeds - double
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:73
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:74: PASSED:
  REQUIRE( Template_Fixture<TestType>::m_a == 1 )
with expansion:
  1.0 == 1

-------------------------------------------------------------------------------
A TEMPLATE_PRODUCT_TEST_CASE_METHOD based test run that succeeds - std::vector
<int>
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:77
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:79: PASSED:
  REQUIRE( Template_Fixture_2<TestType>::m_a.size() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
A TEMPLATE_PRODUCT_TEST_CASE_METHOD based test run that succeeds - std::vector
<float>
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:77
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:79: PASSED:
  REQUIRE( Template_Fixture_2<TestType>::m_a.size() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
A TEMPLATE_PRODUCT_TEST_CASE_METHOD based test run that succeeds - Template_Foo
<int>
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:77
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:79: PASSED:
  REQUIRE( Template_Fixture_2<TestType>::m_a.size() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
A TEMPLATE_PRODUCT_TEST_CASE_METHOD based test run that succeeds - Template_Foo
<float>
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:77
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:79: PASSED:
  REQUIRE( Template_Fixture_2<TestType>::m_a.size() == 0 )
with expansion:
  0 == 0

-------------------------------------------------------------------------------
A TEST_CASE_METHOD based test run that fails
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:85
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:87: FAILED:
  REQUIRE( m_a == 2 )
with expansion:
  1 == 2

-------------------------------------------------------------------------------
A TEMPLATE_TEST_CASE_METHOD based test run that fails - int
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:90
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:92: FAILED:
  REQUIRE( Template_Fixture<TestType>::m_a == 2 )
with expansion:
  1 == 2

-------------------------------------------------------------------------------
A TEMPLATE_TEST_CASE_METHOD based test run that fails - float
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:90
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:92: FAILED:
  REQUIRE( Template_Fixture<TestType>::m_a == 2 )
with expansion:
  1.0f == 2

-------------------------------------------------------------------------------
A TEMPLATE_TEST_CASE_METHOD based test run that fails - double
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:90
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:92: FAILED:
  REQUIRE( Template_Fixture<TestType>::m_a == 2 )
with expansion:
  1.0 == 2

-------------------------------------------------------------------------------
A TEMPLATE_PRODUCT_TEST_CASE_METHOD based test run that fails - std::vector
<int>
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:95
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:97: FAILED:
  REQUIRE( Template_Fixture_2<TestType>::m_a.size() == 1 )
with expansion:
  0 == 1

-------------------------------------------------------------------------------
A TEMPLATE_PRODUCT_TEST_CASE_METHOD based test run that fails - std::vector
<float>
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:95
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:97: FAILED:
  REQUIRE( Template_Fixture_2<TestType>::m_a.size() == 1 )
with expansion:
  0 == 1

-------------------------------------------------------------------------------
A TEMPLATE_PRODUCT_TEST_CASE_METHOD based test run that fails - Template_Foo
<int>
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:95
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:97: FAILED:
  REQUIRE( Template_Fixture_2<TestType>::m_a.size() == 1 )
with expansion:
  0 == 1

-------------------------------------------------------------------------------
A TEMPLATE_PRODUCT_TEST_CASE_METHOD based test run that fails - Template_Foo
<float>
-------------------------------------------------------------------------------
/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:95
...............................................................................

/testbed/projects/SelfTest/UsageTests/Class.tests.cpp:97: FAILED:
  REQUIRE( Template_Fixture_2<TestType>::m_a.size() == 1 )
with expansion:
  0 == 1

===============================================================================
test cases: 18 | 9 passed | 9 failed
assertions: 18 | 9 passed | 9 failed

OMNIGRIL_EXIT_CODE=9
